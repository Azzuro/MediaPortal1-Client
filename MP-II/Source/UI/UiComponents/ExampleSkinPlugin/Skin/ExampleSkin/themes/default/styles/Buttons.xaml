<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    DependsOnStyleResources="Colors"
    >

  <!-- ***************************** Storyboards ******************************** -->

  <!-- Storyboard which shows an animation when a Button has focus -->
  <Storyboard x:Key="FocusedButtonStoryboard" FillBehavior="Stop">
    <PointAnimationUsingKeyFrames RepeatBehavior="Forever" AutoReverse="true" BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Fill.GradientOrigin">
      <SplinePointKeyFrame KeyTime="00:00:01" Value="0.5,1.709"/>
      <SplinePointKeyFrame KeyTime="00:00:02" Value="0.2,0.899"/>
      <SplinePointKeyFrame KeyTime="00:00:06" Value="1,0.899"/>
    </PointAnimationUsingKeyFrames>
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:02" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Fill.GradientStops[0].Color">
      <SplineColorKeyFrame KeyTime="00:00:0.5" Value="{ThemeResource FocusedButtonGradientDarkColor}"/>
    </ColorAnimationUsingKeyFrames>
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Stroke.Color">
      <SplineColorKeyFrame KeyTime="00:00:00.2" Value="{ThemeResource HighlightButtonStrokeColor}"/>
    </ColorAnimationUsingKeyFrames>
  </Storyboard>

  <!-- Storyboard which shows an animation when a Button lost its focus -->
  <Storyboard x:Key="UnFocusedButtonStoryboard" FillBehavior="Stop">
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Stroke.Color">
      <SplineColorKeyFrame KeyTime="00:00:01" Value="{ThemeResource ButtonStrokeColor}"/>
    </ColorAnimationUsingKeyFrames>
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:02" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Fill.GradientStops[0].Color">
      <SplineColorKeyFrame KeyTime="00:00:0.2" Value="{ThemeResource ButtonGradientLightColor}"/>
    </ColorAnimationUsingKeyFrames>
  </Storyboard>

  <!-- Storyboard which shows an animation when a Button is pressed -->
  <Storyboard x:Key="PressedButtonStoryboard" FillBehavior="HoldEnd">
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Fill.GradientStops[0].Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource PressedButtonGradientLight2Color}"/>
      <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{ThemeResource PressedButtonGradientLight1Color}"/>
      <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{ThemeResource PressedButtonGradientLight2Color}"/>
    </ColorAnimationUsingKeyFrames>
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Stroke.Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource HighlightButtonStrokeColor}"/>
      <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{ThemeResource PressedButtonStrokeColor}"/>
    </ColorAnimationUsingKeyFrames>
    <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Fill.GradientOrigin">
      <SplinePointKeyFrame KeyTime="00:00:00" Value="0.2,0.899"/>
      <SplinePointKeyFrame KeyTime="00:00:00.5000000" Value="3,0.899"/>
    </PointAnimationUsingKeyFrames>
  </Storyboard>

  <!-- Storyboard whichs turns the background to be transparent for disabled buttons -->
  <Storyboard x:Key="DisabledStoryboard" RepeatBehavior="Forever" Duration="00:00:01">
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Fill.GradientStops[1].Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource DisabledButtonColor}"/>
    </ColorAnimationUsingKeyFrames>
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Fill.GradientStops[0].Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource DisabledButtonColor}"/>
    </ColorAnimationUsingKeyFrames>
  </Storyboard>

  <!-- ************************* Control styles for buttons ************************* -->


  <Style x:Key="ButtonControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle x:Name="Shine" Stroke="{ThemeResource ButtonStrokeColor}" RadiusX="15" RadiusY="15" StrokeThickness="3">
            <Rectangle.Fill>
              <RadialGradientBrush GradientOrigin="0.5,0.82">
                <RadialGradientBrush.RelativeTransform>
                  <TransformGroup>
                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.335" ScaleY="1.582"/>
                    <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                    <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                    <TranslateTransform X="0.027" Y="-0.006"/>
                  </TransformGroup>
                </RadialGradientBrush.RelativeTransform>
                <GradientStop Color="{ThemeResource ButtonGradientLightColor}" Offset="0"/>
                <GradientStop Color="{ThemeResource ButtonGradientDarkColor}" Offset="1"/>
              </RadialGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ***************************** Standard button ******************************** -->

  <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid Margin="0,2,0,2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Control Style="{ThemeResource ButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="10,0,10,5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Focused_BeginStoryboard" HandoffBehavior="SnapshotAndReplace" Storyboard="{StaticResource FocusedButtonStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard x:Name="UnFocused_BeginStoryboard" HandoffBehavior="SnapshotAndReplace" Storyboard="{StaticResource UnFocusedButtonStoryboard}"/>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Pressed_BeginStoryboard" Storyboard="{StaticResource PressedButtonStoryboard}"
                    HandoffBehavior="TemporaryReplace"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Pressed_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Disabled_BeginStoryBoard" Storyboard="{StaticResource DisabledStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Disabled_BeginStoryBoard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
</ResourceDictionary>
