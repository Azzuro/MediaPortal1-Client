<?xml version="1.0" encoding="utf-8"?>
<!-- This screen acts as a simple base screen for each special filter screen which doesn't bring in special
     images/controls/etc. -->
<Include
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Source="screens\master_menu.xaml"
    >
  <Include.Resources>

    <!-- Header_Text resource has to be added by including screen -->

    <Model x:Key="MediaModel" Id="4CDD601F-E280-43b9-AD0A-6D7B2403C856"/>

    <!-- Contents -->
    <ResourceWrapper x:Key="Contents_Element">
      <Grid DataContext="{Binding Source={StaticResource MediaModel}}">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Grid.Row="0">
          <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <DockPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" LastChildFill="false">
            <Label DockPanel.Dock="Left" Content="{Binding ItemsListTitle}"/>
            <StackPanel Margin="0,0,10,0" Orientation="Horizontal" DockPanel.Dock="Right">
              <Label Color="{ThemeResource HintTextColor}" Content=" ("/>
              <Label Color="{ThemeResource HintTextColor}" Content="{Binding NumItemsStr}"/>
              <Label Color="{ThemeResource HintTextColor}" Content=")"/>
            </StackPanel>
          </DockPanel>

          <!-- .. button will be replaced by navbar -->
          <Button Grid.Row="0" Grid.Column="1" Width="60" Margin="0,0,20,0"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              Style="{ThemeResource ButtonStyle}"
              Content=".."
              Command="{Command Source={Service WorkflowManager},Path=NavigatePop,Parameters=1}"
              IsVisible="{Binding HasParentDirectory}"/>
        </Grid>
        <Grid Grid.Column="0" Grid.Row="1"
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsVisible="{Binding IsItemsValid}">
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <!-- To support all properties of the filter items (e.g. NumItems), we need to use a special ListView style -->
          <ListView Style="{ThemeResource ContentsMenuListViewStyle}" ItemsSource="{Binding Items}"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ListView.Resources>
              <Command x:Key="Menu_Command" Source="{StaticResource MediaModel}" Path="Select"
                  Parameters="{LateBoundValue BindingValue={Binding}}"/>
            </ListView.Resources>
          </ListView>
          <Label IsVisible="{Binding IsItemsEmpty}"
              HorizontalAlignment="Center" VerticalAlignment="Center"
              Content="[Media.ViewEmpty]" Color="{ThemeResource HintTextColor}"/>
        </Grid>
        <Label Grid.Row="1" Grid.Column="0" IsVisible="{Binding !IsItemsValid}"
            HorizontalAlignment="Center" VerticalAlignment="Center"
            Content="[Media.ViewInvalid]" Color="{ThemeResource ErrorTextColor}"/>
      </Grid>
    </ResourceWrapper>

  </Include.Resources>
</Include>
