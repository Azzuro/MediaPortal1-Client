<?xml version="1.0" encoding="utf-8"?>

<!--
This is the master template for a dialog with a menu item list.
It uses the standard dialog template "master_dialog.xaml".

Usage:

  <Include
      xmlns="www.team-mediaportal.com/2008/mpf/directx"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Source="screens\master_dialog_menu.xaml"
      >
    <Include.Resources>
      <ResourceWrapper x:Key="Dialog_Header_Text">
        [Header text to be displayed as dialog title]
      </ResourceWrapper>
      <ResourceWrapper x:Key="Menu_Items">
        [Collection of ListItem instances]
      </ResourceWrapper>
      <ResourceWrapper x:Key="Menu_Command">
        [Command to be executed with the selected item as parameter]
      </ResourceWrapper>
    </Include.Resources>
  </Include>

Parameters which have to be accessible by a DynamicResource lookup:
 - Dialog_Header_Text (String): The text to be displayed as dialog title
 - Menu_Items (Collection of ListItem): Items to be displayed as menu items
 - Menu_Command (ICommand): Command which will be executed with the currently selected
   ListItem as single parameter
-->

<Include
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Source="screens\master_dialog.xaml"
    >
  <Include.Resources>
    <!-- Header has to be defined by the includer: "Dialog_Header_Text" -->

    <!-- Contents -->
    <!-- For the Menu_Items resource, we cannot just use the DynamicResource markup extension alone because
         the contents of the Menu_Items ResourceWrapper typically gets filled via a binding, which
         maybe will evaluated too late. When only using a DynamicResource pointing to the Menu_Items
         ResourceWrapper, the XAML parser will typeconvert the ResourceWrapper to its Resource and
         assign the value, which is still null, to the target (ItemsSource) property.
         When using a Binding to the Resource property directly, the later assignment to the Resource will
         be noticed by the binding. -->
    <ListView x:Key="Contents_Element" x:Name="MainMenu" Style="{ThemeResource MenuListViewStyle}"
        ItemsSource="{Binding Source={DynamicResource Menu_Items},Path=Resource}" HasFocus="true"
        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
  </Include.Resources>
</Include>
