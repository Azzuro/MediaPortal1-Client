<Application 
  x:Class="MediaPortal.app"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="clr-namespace:MediaPortal" 
    Startup="AppStartup">
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="skinElements.xaml" />
        <ResourceDictionary Source="skinImages.xaml" />
      </ResourceDictionary.MergedDictionaries>
      
      <!-- GUIToggleButton -->
      <Style TargetType="{x:Type ctrl:GUIToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="MinHeight" Value="23"/>
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ctrl:GUIToggleButton}">
              <Border 
                x:Name="Border"  
                CornerRadius="0" 
                BorderThickness="0"
                BorderBrush="Transparent">
                <ScrollViewer  Width="{TemplateBinding ScrollAreaWidth}" 
                      FocusVisualStyle="{DynamicResource FocusStyle}" 
                      Margin="8,0" 
                      HorizontalScrollBarVisibility="Hidden" 
                      VerticalScrollBarVisibility="Hidden"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center">
                  <TextBlock FocusVisualStyle="{DynamicResource FocusStyle}" 
                    Text="{TemplateBinding Content}"
                    Foreground="{TemplateBinding Foreground}" 
                    >
                  </TextBlock>
                </ScrollViewer>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocused" Value="true">
                  <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="IsChecked" Value="true"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Border" Property="Background" Value="{DynamicResource ToggleOnGreenFocus}">
                      </Setter>
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="IsChecked" Value="false"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Border" Property="Background" Value="{DynamicResource ToggleOffGreenFocus}">
          
                  </Setter>
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="false"/>
                    <Condition Property="IsChecked" Value="true"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Border" Property="Background" Value="{DynamicResource ToggleOnGreenNoFocus}">

                  </Setter>
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="false"/>
                    <Condition Property="IsChecked" Value="false"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Border" Property="Background" Value="{DynamicResource ToggleOffGreenNoFocus}">
                 </Setter>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter TargetName="Border" Property="Background" Value="Yellow" />
                  <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                  <Setter Property="Foreground" Value="Black"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      
      <!-- GUIButton -->
      
      <Style TargetType="{x:Type ctrl:GUIButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="MinHeight" Value="23"/>
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="White" />

        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ctrl:GUIButton}">
              <Border 
                x:Name="Border"  
                CornerRadius="0" 
                BorderThickness="0"
                BorderBrush="Transparent"
                Background="{DynamicResource GreenNoFocus}"
                >
                    <ScrollViewer  
                      FocusVisualStyle="{DynamicResource FocusStyle}" 
                      Margin="8,0" 
                      HorizontalScrollBarVisibility="Hidden" 
                      VerticalScrollBarVisibility="Hidden">
                      <TextBlock FocusVisualStyle="{DynamicResource FocusStyle}" 
                        Text="{TemplateBinding Content}"
                        Foreground="{TemplateBinding Foreground}" 
                        VerticalAlignment="Center">
                       </TextBlock>
                    </ScrollViewer>
              </Border>
              <ControlTemplate.Triggers>
               <Trigger Property="IsButton" Value="false">
                  <Setter TargetName="Border" Property="Background" Value="Transparent">
                  </Setter>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                  <Setter TargetName="Border" Property="Background" Value="{DynamicResource GreenFocus}">
                  </Setter>
                </Trigger>

              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      
    <!-- ControlTemplates for GUISelectButton -->
      
      <ControlTemplate x:Key="SelectOpen" TargetType="{x:Type ctrl:GUISelectButton}">
        <Border
          Width="{TemplateBinding Width}" 
          x:Name="Border"  
          CornerRadius="0" 
          BorderThickness="0"
          BorderBrush="Transparent">
            <Button Style="{DynamicResource ButtonStyle}">
              <Grid >
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="16"/>
                  <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionFieldWidth}"/>
                  <ColumnDefinition Width="16"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <ctrl:GUIButton VerticalAlignment="Center" IsButton="false" Height="{TemplateBinding Height}" Command="{x:Static ctrl:GUISelectButton.OpenCloseSelect}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem}" x:Name="SelectContent" Grid.Column="1" />
                <Button Command="{x:Static ctrl:GUISelectButton.PreviousCommand}" ClickMode="Press" Grid.Column="0" x:Name="LeftButton" Width="16" Height="16" Style="{DynamicResource LeftButton}"/>
                <Button Command="{x:Static ctrl:GUISelectButton.NextCommand}" ClickMode="Press" Grid.Column="2" x:Name="RightButton" Width="16" Height="16" Style="{DynamicResource RightButton}"/>
              </Grid>
            </Button>
        </Border>
        <ControlTemplate.Triggers>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <ControlTemplate x:Key="SelectClose" TargetType="{x:Type ctrl:GUISelectButton}">
        <Border
          x:Name="Border"  
          CornerRadius="0" 
          BorderThickness="0"
          BorderBrush="Transparent">
          <ctrl:GUIButton Command="{x:Static ctrl:GUISelectButton.OpenCloseSelect}"  Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsKeyboardFocused" Value="true">
            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <!-- Fadelabel -->
      <Style TargetType="{x:Type ctrl:GUIFadelabel}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
        <Setter Property="OpacityMask">
          <Setter.Value>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
              <GradientStop Offset="0.0" Color="#FF000000"/>
              <GradientStop Offset="0.75" Color="#FF000000"/>
              <GradientStop Offset="1.0" Color="#00000000"/>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ctrl:GUIFadelabel}">
              <Border BorderThickness="0" BorderBrush="Transparent" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Left">
                <ScrollViewer Width="{TemplateBinding Width}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                  <TextBlock Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" />
                </ScrollViewer>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <!-- TextboxScrollUp -->
      <Style TargetType="{x:Type ctrl:GUITextboxScrollUp}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ctrl:GUITextboxScrollUp}">
              <Border BorderThickness="0" BorderBrush="Transparent" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Left">
                <ScrollViewer Height="{TemplateBinding Height}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                  <TextBlock 
                    Width="{TemplateBinding Width}" 
                    TextWrapping="Wrap" 
                    Text="{TemplateBinding Content}" />
                </ScrollViewer>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>  
      
      <!-- GUISpinControl Resource -->
      <Style TargetType="{x:Type ctrl:GUISpinControl}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ctrl:GUISpinControl}">
             <Border BorderThickness="0" BorderBrush="Transparent">
              <Grid Name="ContentGrid">
                <Grid.RowDefinitions>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Width="80" Grid.Column="{TemplateBinding ButtonContentValue}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}" />
                <RepeatButton Width="16" Command="{x:Static ctrl:GUISpinControl.IncreaseCommand}"  Grid.Column="{TemplateBinding ButtonUpValue}" Grid.Row="0" Style="{DynamicResource UpScrollSmall}"></RepeatButton>
                <RepeatButton Width="16" Command="{x:Static ctrl:GUISpinControl.DecreaseCommand}"  Grid.Column="{TemplateBinding ButtonDownValue}" Grid.Row="0" Style="{DynamicResource DownScrollSmall}"></RepeatButton>
              </Grid>
             </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <!-- GUICheckMark Resource -->
      <Style TargetType="{x:Type ctrl:GUICheckMark}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ctrl:GUICheckMark}">
              <Border BorderThickness="0" BorderBrush="Transparent" Margin="2" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                <DockPanel>
                  <Image Name="CheckMarkIndicator" Width="16" Height="16" Source="{DynamicResource check-boxNF.png}"/>
                  <TextBlock Margin="6" Text="{TemplateBinding Text}" TextAlignment="Left"/>
                </DockPanel>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true">
                  <Setter TargetName="CheckMarkIndicator" Property="Source" Value="{DynamicResource check-box.png}">
                  </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="false">
                  <Setter TargetName="CheckMarkIndicator" Property="Source" Value="{DynamicResource check-boxNF.png}">
                  </Setter>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      
      <!-- GUISelectButton Resource -->
      <Style TargetType="{x:Type ctrl:GUISelectButton}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template" Value="{DynamicResource SelectClose}"/>
      </Style>
    </ResourceDictionary>

  
    
  </Application.Resources>
</Application>