<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
>
 
  <!-- Skin BlueTwo -->

  <!-- GUI Elements -->
  <Style x:Key="ContextMenuStyle" TargetType="{x:Type Window}">
    <Setter Property="Width" Value="546"/>
    <Setter Property="Height" Value="366"/>
    <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Window}">
            <Border x:Name="Border" 
             CornerRadius="0" 
             BorderThickness="0"
             BorderBrush="Transparent">
              <Border.Background>
                <ImageBrush ImageSource="{DynamicResource context_background.png}"/>
              </Border.Background>
              <Grid Margin="28,28" >
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="44"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="44"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock  
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center"       
                    Grid.Column="0" 
                    Grid.Row="0" 
                    Foreground="White" 
                    FontSize="18" 
                    x:Name="ContextTitle"/>
                
                  <Button 
                    Grid.Column="1" 
                    Grid.Row="0" 
                    Canvas.Top="10" 
                    Canvas.Right="540" 
                    x:Name="CloseButton" 
                    Style="{DynamicResource DialogCloseButton}" 
                    Width="32" 
                    Height="32"/>
                
                  <ListView 
                    Grid.ColumnSpan="2" 
                    Grid.Row="1" 
                    x:Name="ContextItemsControl" 
                    Style="{DynamicResource ContextListView}">
                  </ListView>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
    </Setter>
  </Style>
  
  
  <Style x:Key="GUIImage" TargetType="{x:Type Image}"></Style> 
  
  <Style x:Key="PageBackground" TargetType="{x:Type Canvas}">
     <Setter Property="Width" Value="720"/>
     <Setter Property="Height" Value="576"/>
     <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="{DynamicResource background.png}"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="FocusStyle" >
   <Setter Property="Control.Template">
     <Setter.Value>
        <ControlTemplate>
          <Rectangle Stroke="Transparent" StrokeThickness="0" Margin="0" SnapsToDevicePixels="True">
          </Rectangle>
        </ControlTemplate>
    </Setter.Value>
  </Setter>
  </Style>
  
  <Style x:Key="GUISortButtonStyle" TargetType="{x:Type CheckBox}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Height" Value="16"/>
    <Setter Property="Width" Value="18"/>
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="Foreground" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Border x:Name="Border" 
           CornerRadius="0" 
           BorderThickness="0"
           BorderBrush="Transparent">
              <ContentPresenter 
                Margin="8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RecognizesAccessKey="True"/>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="true"/>
                <Condition Property="IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource arrow_round_up_focus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="true"/>
                <Condition Property="IsChecked" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource arrow_round_down_focus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="false"/>
                <Condition Property="IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource arrow_round_up_nofocus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="false"/>
                <Condition Property="IsChecked" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource arrow_round_down_nofocus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
          </ControlTemplate.Triggers>
         </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="LeftButton" TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Height" Value="16"/>
    <Setter Property="Width" Value="18"/>
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="Foreground" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Border" 
           CornerRadius="0" 
           BorderThickness="0"
           BorderBrush="Transparent">
            <ContentPresenter 
              Margin="8,0"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource arrow_round_left_focus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource arrow_round_left_nofocus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </Trigger>
           </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="RightButton" TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Height" Value="16"/>
    <Setter Property="Width" Value="18"/>
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="Foreground" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Border" 
           CornerRadius="0" 
           BorderThickness="0"
           BorderBrush="Transparent">
            <ContentPresenter 
              Margin="8,0"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource arrow_round_right_focus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource arrow_round_right_nofocus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="UpScroll" TargetType="{x:Type RepeatButton}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="{DynamicResource page_up_nofocus.png}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border 
            Width="28" 
            Height="28"
            Background="{TemplateBinding Background}" 
            Padding="0,0,0,0"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
     <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Background">
          <Setter.Value>
            <ImageBrush ImageSource="{DynamicResource page_up_focus.png}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="DownScroll" TargetType="{x:Type RepeatButton}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="{DynamicResource page_down_nofocus.png}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border 
            Width="28" 
            Height="28"
            Background="{TemplateBinding Background}" 
            Padding="0,0,0,0"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Background">
          <Setter.Value>
            <ImageBrush ImageSource="{DynamicResource page_down_focus.png}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- small ones-->

  <Style x:Key="UpScrollSmall" TargetType="{x:Type RepeatButton}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="{DynamicResource arrow_round_up_nofocus.png}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border 
            Width="16" 
            Height="16"
            Background="{TemplateBinding Background}" 
            Padding="0,0,0,0"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Background">
          <Setter.Value>
            <ImageBrush ImageSource="{DynamicResource arrow_round_up_focus.png}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="DownScrollSmall" TargetType="{x:Type RepeatButton}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="{DynamicResource arrow_round_down_nofocus.png}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border 
            Width="16" 
            Height="16"
            Background="{TemplateBinding Background}" 
            Padding="0,0,0,0"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Background">
          <Setter.Value>
            <ImageBrush ImageSource="{DynamicResource arrow_round_down_focus.png}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>


  <!---->

  <Style x:Key="GUIListcontrolItems" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Foreground" Value="Transparent"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0,0,0,0"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border 
            Background="{TemplateBinding Background}" 
            >
            <DockPanel>
              <Grid Margin="0,0" x:Name="ListControlPanel">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="20" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="32"/>
                </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="1" 
                       Margin="4" 
                Foreground="White"
                FontSize="18"
                Text="{Binding Tag}"
                VerticalAlignment="Center"
                >
            </TextBlock>
                <ContentPresenter x:Name="ContentSite" 
                 Grid.Row="0" 
                 Grid.Column="0" 
                 Margin="4" 
                 HorizontalAlignment="Center" 
                 VerticalAlignment="Center"/>
              </Grid>

            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="ListControlPanel" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource list_sub_focus.png}" />
                </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
              <Setter TargetName="ListControlPanel" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource list_sub_nofocus.png}" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
 
  <Style x:Key="GUIFilmstripItems" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Foreground" Value="Transparent"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Background="Transparent">
            <StackPanel Margin="0" x:Name="ThumbnailPanel">
              <Grid Margin="0,0,10,0" >
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="70"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                 <TextBlock x:Name="ImageText"
                    Foreground="White"
                    Margin="0,8" 
                    FontSize="16"
                    Grid.Row="1" 
                    Text="{Binding Tag}">
                </TextBlock>
                <StackPanel Grid.Row="0" Width="74" Height="74" x:Name="ContentRect">
                  <ContentPresenter Width="64" Height="64" Grid.Row="0" Grid.Column="0" x:Name="ContentSite"  
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center"/>
                </StackPanel>
              </Grid>
            </StackPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="ContentRect" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource icon_empty_focus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
              <Setter TargetName="ContentRect" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource icon_empty_nofocus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="GUIThumbnailItems" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Foreground" Value="Transparent"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border 
            Background="Transparent" 
            >
            <StackPanel Margin="0">
              <Grid Margin="0,0,10,0" Grid.Row="0" Grid.Column="0" x:Name="ThumbnailPanel">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="108" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="108"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock 
                    Foreground="White"
                    Margin="0,2" 
                    FontSize="16"
                    Grid.Column="0" Grid.Row="1" 
                    Text="{Binding Tag}">
                </TextBlock>
                <StackPanel Grid.Row="0" Width="108" Height="108" x:Name="ContentRect">
                  <ContentPresenter Margin="8,8" Grid.Row="0" Grid.Column="0" x:Name="ContentSite"  
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center"/>
                </StackPanel>
              </Grid>
            </StackPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="ContentRect" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource icon_empty_focus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
              <Setter TargetName="ContentRect" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource icon_empty_nofocus.png}" Stretch="Uniform"/>
                </Setter.Value>
              </Setter>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

   <Style x:Key="GUISortButton" TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="MinHeight" Value="23"/>
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="Foreground" Value="White" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border
            x:Name="Border"  
            CornerRadius="0" 
            BorderThickness="0"
            BorderBrush="Transparent">
            <DockPanel>
              <ContentPresenter 
                Margin="8,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                RecognizesAccessKey="True"/>
               <CheckBox Canvas.Top="8" Canvas.Left="165" Width="16" Height="16" Style="{StaticResource GUISortButtonStyle}"/>
           </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
            </Trigger>
            <Trigger Property="IsDefaulted" Value="true">
              <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource button_green_focus_165x32.png}"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource button_green_nofocus_165x32.png}"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource button_green_focus_165x32.png}"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="Border" Property="Opacity" Value="0.5"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Background" Value="Yellow" />
              <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
              <Setter Property="Foreground" Value="Black"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="GUISelectButton" TargetType="{x:Type CheckBox}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="MinHeight" Value="23"/>
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="Foreground" Value="White" />
    <Setter Property="ClickMode" Value="Press" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Template" Value="{DynamicResource SelectButtonReleased}"/>
  </Style>
  
  <Style x:Key="GUIButton" TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="MinHeight" Value="23"/>
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="Foreground" Value="White" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border 
            x:Name="Border"  
            CornerRadius="0" 
            BorderThickness="0"
            BorderBrush="Transparent">
            <ContentPresenter 
              Margin="8,0"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
              <Setter TargetName="Border" Property="Background" Value="Black" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource button_green_focus_165x32.png}"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource button_green_nofocus_165x32.png}"/>
                </Setter.Value>
              </Setter>
            </Trigger>
              <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="Border" Property="Background">
                  <Setter.Value>
                    <ImageBrush ImageSource="{DynamicResource button_green_focus_165x32.png}"/>
                  </Setter.Value>
                </Setter>              
              </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource button_green_focus_165x32.png}"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="DialogCloseButton" TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="MinHeight" Value="42"/>
    <Setter Property="MinWidth" Value="42"/>
    <Setter Property="FontSize" Value="1"/>
    <Setter Property="Foreground" Value="Transparent" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border 
            x:Name="Border"  
            CornerRadius="0" 
            BorderThickness="0"
            BorderBrush="Transparent">
            <ContentPresenter 
              Margin="8,0"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
              <Setter TargetName="Border" Property="Background" Value="Black" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource dialogue_shutdown_focus.png}"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource dialogue_shutdown_nofocus.png}"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Opacity" Value="0.5">
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="GUIToggleButton" TargetType="{x:Type CheckBox}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="MinHeight" Value="23"/>
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="Foreground" Value="White" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Border 
					  x:Name="Border"  
					  CornerRadius="0" 
					  BorderThickness="0"
					  BorderBrush="Transparent">
            <ContentPresenter 
						  Margin="2"
						  HorizontalAlignment="Center"
						  VerticalAlignment="Center"
						  RecognizesAccessKey="True"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="true"/>
                <Condition Property="IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource togglebutton-on-focus.png}"/>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="true"/>
                <Condition Property="IsChecked" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource togglebutton-off-focus.png}"/>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="false"/>
                <Condition Property="IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource togglebutton-on-nofocus.png}"/>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="false"/>
                <Condition Property="IsChecked" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <ImageBrush ImageSource="{DynamicResource togglebutton-off-nofocus.png}"/>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Background" Value="Yellow" />
              <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
              <Setter Property="Foreground" Value="Black"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

   
  <!-- Listcontrol -->
  
  <Style x:Key="GUIListControl" TargetType="{x:Type ListView}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0,0,0,0"/>
    <Setter Property="Foreground" Value="Transparent"/>
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="ItemContainerStyle" Value="{StaticResource GUIListcontrolItems}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border Background="Transparent" SnapsToDevicePixels="True">
            <ScrollViewer VerticalScrollBarVisibility="Visible" 
								HorizontalScrollBarVisibility="Disabled">
              <StackPanel IsItemsHost="true" />
              <ScrollViewer.Style>
                <Style TargetType="{x:Type ScrollViewer}">
                  <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
                  <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                      <Border Padding="0,8">
                        <StackPanel>
                          <ScrollContentPresenter Height="416" Content="{TemplateBinding ScrollViewer.Content}" />
                          <Grid Width="425" Height="28" Margin="0,0,0,0" x:Name="HeaderPanel">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="*"/>
                              <ColumnDefinition Width="100"/>
                              <ColumnDefinition Width="28"/>
                              <ColumnDefinition Width="28"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                              <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <RepeatButton Grid.Column="2" Grid.Row="0" Command="ScrollBar.PageUpCommand" Style="{DynamicResource UpScroll}"/>
                            <RepeatButton Grid.Column="3" Grid.Row="0" Command="ScrollBar.PageDownCommand" Style="{DynamicResource DownScroll}"/>
                            <TextBlock Padding="2,2,2,0"  TextAlignment="Right" Foreground="White" FontSize="18" Grid.Column="1" Grid.Row="0" Text="0/0" Name="pageCount"/>
                            <TextBlock Padding="2,2,2,0"  TextAlignment="Left" Foreground="White" FontSize="18" Grid.Column="0" Grid.Row="0" Text="0" x:Name="objCount"></TextBlock>
                          </Grid>
                        </StackPanel>
                      </Border>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
               </Style>
              </ScrollViewer.Style>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ContextMenu LisView -->
  <Style x:Key="ContextListView" TargetType="{x:Type ListView}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0,0,0,0"/>
    <Setter Property="Foreground" Value="Transparent"/>
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="ItemContainerStyle" Value="{StaticResource GUIListcontrolItems}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border Background="Transparent" SnapsToDevicePixels="True">
            <ScrollViewer VerticalScrollBarVisibility="Visible" 
								HorizontalScrollBarVisibility="Disabled">
              <StackPanel IsItemsHost="true" />
              <ScrollViewer.Style>
                <Style TargetType="{x:Type ScrollViewer}">
                  <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Border Padding="0,8">
                          <StackPanel>
                            <ScrollContentPresenter Height="224" Content="{TemplateBinding ScrollViewer.Content}" />
                            <Grid Width="490" Height="28" Margin="0,3,0,0" x:Name="HeaderPanel">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="32"/>
                              </Grid.ColumnDefinitions>
                              <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                              </Grid.RowDefinitions>
                              <RepeatButton HorizontalAlignment="Left" Grid.Column="2" Grid.Row="0" Command="ScrollBar.PageUpCommand" Style="{DynamicResource UpScroll}"/>
                              <RepeatButton HorizontalAlignment="Left" Grid.Column="3" Grid.Row="0" Command="ScrollBar.PageDownCommand" Style="{DynamicResource DownScroll}"/>
                            </Grid>
                          </StackPanel>
                        </Border>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </ScrollViewer.Style>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- -->
  <Style x:Key="GUIThumbnailControl" TargetType="{x:Type ListView}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0,0,0,0"/>
    <Setter Property="Foreground" Value="Transparent"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="ItemContainerStyle" Value="{DynamicResource GUIThumbnailItems}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border Background="Transparent" SnapsToDevicePixels="True">
            <ScrollViewer VerticalScrollBarVisibility="Visible" 
								HorizontalScrollBarVisibility="Disabled">
              <WrapPanel IsItemsHost="true" />
              <ScrollViewer.Style>
                <Style TargetType="{x:Type ScrollViewer}">
                  <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate>
                        <StackPanel>
                          <ScrollContentPresenter Height="400" Content="{TemplateBinding ScrollViewer.Content}" />
                          <Grid Width="425" Height="28" Margin="0,0,0,0" Grid.Row="0" Grid.Column="0" x:Name="HeaderPanel">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="*"/>
                              <ColumnDefinition Width="100"/>
                              <ColumnDefinition Width="28"/>
                              <ColumnDefinition Width="28"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                              <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <RepeatButton Grid.Column="2" Grid.Row="0" Command="ScrollBar.PageUpCommand" Style="{DynamicResource UpScroll}"/>
                            <RepeatButton Grid.Column="3" Grid.Row="0" Command="ScrollBar.PageDownCommand" Style="{DynamicResource DownScroll}"/>
                            <TextBlock Padding="2,2,2,0"  TextAlignment="Right" Foreground="White" FontSize="18" Grid.Column="1" Grid.Row="0" Text="0/0" Name="pageCount"/>
                            <TextBlock Padding="2,2,2,0"  TextAlignment="Left" Foreground="White" FontSize="18" Grid.Column="0" Grid.Row="0" Text="{Binding Source=ObjectCount}" x:Name="objCount"></TextBlock>
                          </Grid>
                        </StackPanel>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </ScrollViewer.Style>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="GUIFilmstripControl" TargetType="{x:Type ListView}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0,0,0,0"/>
    <Setter Property="Foreground" Value="Transparent"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
    <Setter Property="ItemContainerStyle" Value="{DynamicResource GUIFilmstripItems}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border Background="Transparent" SnapsToDevicePixels="True">
            <ScrollViewer VerticalScrollBarVisibility="Auto" 
								HorizontalScrollBarVisibility="Auto" >
              <WrapPanel IsItemsHost="true" Orientation="Horizontal"/>
              <ScrollViewer.Style>
                <Style TargetType="{x:Type ScrollViewer}">
                  <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate>
                        <StackPanel x:Name="mainContent">
                          <Grid Width="425" Height="440" Margin="0,0,0,0" Grid.Row="0" Grid.Column="0" x:Name="xxPanel">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                              <RowDefinition Height="*"/>
                              <RowDefinition Height="140"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Margin="4,4,4,4" Grid.Row="1" Height="140" Content="{TemplateBinding ScrollViewer.Content}" />
                            <Image Grid.Row="0" Canvas.Left="290" Canvas.Top="97" Width="370" Height="312" Source="{DynamicResource filmstrip_bg.png}"/>
                            <Image Grid.Row="0" Canvas.Left="300" Canvas.Top="113" Width="325" Height="263" x:Name="PreviewImage" />
                          </Grid>
                          <Grid Width="425" Height="28" Margin="0,0,0,0" Grid.Row="0" Grid.Column="0" x:Name="HeaderPanel">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="*"/>
                              <ColumnDefinition Width="100"/>
                              <ColumnDefinition Width="28"/>
                              <ColumnDefinition Width="28"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                              <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <RepeatButton Grid.Column="2" Grid.Row="0" Command="ScrollBar.PageLeftCommand" Style="{DynamicResource UpScroll}"/>
                            <RepeatButton Grid.Column="3" Grid.Row="0" Command="ScrollBar.PageRightCommand" Style="{DynamicResource DownScroll}"/>
                            <TextBlock Padding="2,2,2,0"  TextAlignment="Right" Foreground="White" FontSize="18" Grid.Column="1" Grid.Row="0" Text="0/0" Name="pageCount"/>
                            <TextBlock Padding="2,2,2,0"  TextAlignment="Left" Foreground="White" FontSize="18" Grid.Column="0" Grid.Row="0" Text="0" x:Name="objCount"></TextBlock>
                          </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                          <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PreviewImage" Property="Source"  Value="{Binding Path=ThumbnailImage}"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </ScrollViewer.Style>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  

</ResourceDictionary>