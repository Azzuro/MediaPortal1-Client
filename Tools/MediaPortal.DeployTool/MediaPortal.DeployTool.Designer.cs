//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.1433
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediaPortal.DeployTool {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MediaPortal_DeployTool {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MediaPortal_DeployTool() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MediaPortal.DeployTool.MediaPortal.DeployTool", typeof(MediaPortal_DeployTool).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced Installation ähnelt.
        /// </summary>
        internal static string BaseInstallation_labelAdvancedCaption {
            get {
                return ResourceManager.GetString("BaseInstallation_labelAdvancedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The advanced installation allows you to install Server/Client setups and to specify installation locations and other settings ähnelt.
        /// </summary>
        internal static string BaseInstallation_labelAdvancedDesc {
            get {
                return ResourceManager.GetString("BaseInstallation_labelAdvancedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One Click Installation ähnelt.
        /// </summary>
        internal static string BaseInstallation_labelOneClickCaption {
            get {
                return ResourceManager.GetString("BaseInstallation_labelOneClickCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All required applications will be installed into their default locations using default settings. The database password is &quot;MediaPortal&quot;. ähnelt.
        /// </summary>
        internal static string BaseInstallation_labelOneClickDesc {
            get {
                return ResourceManager.GetString("BaseInstallation_labelOneClickDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Perform an advanced installation ähnelt.
        /// </summary>
        internal static string BaseInstallation_rbAdvanced {
            get {
                return ResourceManager.GetString("BaseInstallation_rbAdvanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Perform a One Click Installation ähnelt.
        /// </summary>
        internal static string BaseInstallation_rbOneClick {
            get {
                return ResourceManager.GetString("BaseInstallation_rbOneClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The advanced installation allows you to specify installation locations and other settings ähnelt.
        /// </summary>
        internal static string BaseInstallationNoTvEngine_labelAdvancedDesc {
            get {
                return ResourceManager.GetString("BaseInstallationNoTvEngine_labelAdvancedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All required applications will be installed into their default locations and with the default settings. ähnelt.
        /// </summary>
        internal static string BaseInstallationNoTvEngine_labelOneClickDesc {
            get {
                return ResourceManager.GetString("BaseInstallationNoTvEngine_labelOneClickDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will only install MediaPortal 1.0. To watch TV it will connect to an dedicated TV-Server on your LAN. ähnelt.
        /// </summary>
        internal static string CustomInstallation_labelClient {
            get {
                return ResourceManager.GetString("CustomInstallation_labelClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will only install the MediaPortal TV-Server on this PC.
        ///The PC will then act as dedicated TV-Server and provide other PC&apos;s in your LAN with TV. (database installation required) ähnelt.
        /// </summary>
        internal static string CustomInstallation_labelMaster {
            get {
                return ResourceManager.GetString("CustomInstallation_labelMaster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please choose which setup you want to install: ähnelt.
        /// </summary>
        internal static string CustomInstallation_labelSectionHeader {
            get {
                return ResourceManager.GetString("CustomInstallation_labelSectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This is the right setup for you if the TV-Cards are installed in the same PC as you want
        ///to use MediaPortal and watch TV on MediaPortal 1.0. ähnelt.
        /// </summary>
        internal static string CustomInstallation_labelSingleSeat {
            get {
                return ResourceManager.GetString("CustomInstallation_labelSingleSeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will only install the MediaPortal TV-Server on this PC. 
        ///The PC will then act as dedicated TV-Server and provide other PCs in your LAN with TV (no database required). ähnelt.
        /// </summary>
        internal static string CustomInstallation_labelSlave {
            get {
                return ResourceManager.GetString("CustomInstallation_labelSlave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MediaPortal client ähnelt.
        /// </summary>
        internal static string CustomInstallation_rbClient {
            get {
                return ResourceManager.GetString("CustomInstallation_rbClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Singleseat Installation ähnelt.
        /// </summary>
        internal static string CustomInstallation_rbSingleSeat {
            get {
                return ResourceManager.GetString("CustomInstallation_rbSingleSeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dedicated TV-Server (master) ähnelt.
        /// </summary>
        internal static string CustomInstallation_rbTvServerMaster {
            get {
                return ResourceManager.GetString("CustomInstallation_rbTvServerMaster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dedicated TV-Server (slave, existing TV-Server (master) required) ähnelt.
        /// </summary>
        internal static string CustomInstallation_rbTvServerSlave {
            get {
                return ResourceManager.GetString("CustomInstallation_rbTvServerSlave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Browse ähnelt.
        /// </summary>
        internal static string DBMSSettings_buttonBrowse {
            get {
                return ResourceManager.GetString("DBMSSettings_buttonBrowse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure Windows Firewall to allow external access to database server ähnelt.
        /// </summary>
        internal static string DBMSSettings_checkBoxFirewall {
            get {
                return ResourceManager.GetString("DBMSSettings_checkBoxFirewall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have to supply a valid installation path for the SQL-Server. ähnelt.
        /// </summary>
        internal static string DBMSSettings_errInvalidInstallationPath {
            get {
                return ResourceManager.GetString("DBMSSettings_errInvalidInstallationPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have to supply a password for the &quot;sa&quot; SQL-Server user. ähnelt.
        /// </summary>
        internal static string DBMSSettings_errPasswordMissing {
            get {
                return ResourceManager.GetString("DBMSSettings_errPasswordMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please set the needed options for the SQL-Server installation: ähnelt.
        /// </summary>
        internal static string DBMSSettings_labelHeading {
            get {
                return ResourceManager.GetString("DBMSSettings_labelHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installation directory ähnelt.
        /// </summary>
        internal static string DBMSSettings_labelInstDir {
            get {
                return ResourceManager.GetString("DBMSSettings_labelInstDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password for &quot;sa&quot; user of the SQL Server ähnelt.
        /// </summary>
        internal static string DBMSSettings_labelPassword {
            get {
                return ResourceManager.GetString("DBMSSettings_labelPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (The password for the admin-user of the SQL-Server. Default is &quot;MediaPortal&quot;) ähnelt.
        /// </summary>
        internal static string DBMSSettings_labelPasswordDesc {
            get {
                return ResourceManager.GetString("DBMSSettings_labelPasswordDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the installation folder for the SQL-Server ähnelt.
        /// </summary>
        internal static string DBMSSettings_msgSelectDir {
            get {
                return ResourceManager.GetString("DBMSSettings_msgSelectDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select the SQL-Server you want to use: ähnelt.
        /// </summary>
        internal static string DBMSType_labelHeading {
            get {
                return ResourceManager.GetString("DBMSType_labelHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SQL server is already present and will be used for TV-Server ähnelt.
        /// </summary>
        internal static string DBMSType_rbDBAlreadyInstalled {
            get {
                return ResourceManager.GetString("DBMSType_rbDBAlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Microsoft SQL-Server Express ähnelt.
        /// </summary>
        internal static string DBMSType_rbMSSQL {
            get {
                return ResourceManager.GetString("DBMSType_rbMSSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MySQL 5 ähnelt.
        /// </summary>
        internal static string DBMSType_rbMySQL {
            get {
                return ResourceManager.GetString("DBMSType_rbMySQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An internet connection is required for the installation process.
        ///Do you want to start with the installation process now or do you just 
        ///want to download the required components in order to perform the 
        ///installation later (maybe on a pc without an internet connection)? ähnelt.
        /// </summary>
        internal static string DownloadOnly_labelSectionHeader {
            get {
                return ResourceManager.GetString("DownloadOnly_labelSectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only download required components ähnelt.
        /// </summary>
        internal static string DownloadOnly_no {
            get {
                return ResourceManager.GetString("DownloadOnly_no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start with the installation now ähnelt.
        /// </summary>
        internal static string DownloadOnly_yes {
            get {
                return ResourceManager.GetString("DownloadOnly_yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download of settings file failed. Please review your Internet Explorer&apos;s connection configuration. ähnelt.
        /// </summary>
        internal static string DownloadSettings_failed {
            get {
                return ResourceManager.GetString("DownloadSettings_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MediaPortal is FREE - if you bought it on ebay you have been fooled! ähnelt.
        /// </summary>
        internal static string Finished_labelEbay {
            get {
                return ResourceManager.GetString("Finished_labelEbay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Congratulations ! ähnelt.
        /// </summary>
        internal static string Finished_labelHeading1 {
            get {
                return ResourceManager.GetString("Finished_labelHeading1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You successfully downloaded all MediaPortal components ähnelt.
        /// </summary>
        internal static string Finished_labelHeading2_download {
            get {
                return ResourceManager.GetString("Finished_labelHeading2_download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You successfully completed the setup of MediaPortal ähnelt.
        /// </summary>
        internal static string Finished_labelHeading2_install {
            get {
                return ResourceManager.GetString("Finished_labelHeading2_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Below you can find some useful links that will help you getting started with MediaPortal ähnelt.
        /// </summary>
        internal static string Finished_labelHeading3 {
            get {
                return ResourceManager.GetString("Finished_labelHeading3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MediaPortal Forum ähnelt.
        /// </summary>
        internal static string Finished_linkForum {
            get {
                return ResourceManager.GetString("Finished_linkForum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MediaPortal Homepage ähnelt.
        /// </summary>
        internal static string Finished_linkHomepage {
            get {
                return ResourceManager.GetString("Finished_linkHomepage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MediaPortal Wiki ähnelt.
        /// </summary>
        internal static string Finished_linkWiki {
            get {
                return ResourceManager.GetString("Finished_linkWiki", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        internal static string HTTPDownload_buttonCancel {
            get {
                return ResourceManager.GetString("HTTPDownload_buttonCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There was an error downloading the requested file ähnelt.
        /// </summary>
        internal static string HTTPDownload_errDownloadFailed {
            get {
                return ResourceManager.GetString("HTTPDownload_errDownloadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download URL: ähnelt.
        /// </summary>
        internal static string HTTPDownload_labelSourceURL {
            get {
                return ResourceManager.GetString("HTTPDownload_labelSourceURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target: ähnelt.
        /// </summary>
        internal static string HTTPDownload_labelTargetFile {
            get {
                return ResourceManager.GetString("HTTPDownload_labelTargetFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download cancelled by user ähnelt.
        /// </summary>
        internal static string HTTPDownload_msgCanceledByUser {
            get {
                return ResourceManager.GetString("HTTPDownload_msgCanceledByUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading file... ähnelt.
        /// </summary>
        internal static string HTTPDownload_Title {
            get {
                return ResourceManager.GetString("HTTPDownload_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure ähnelt.
        /// </summary>
        internal static string Install_actionConfigure {
            get {
                return ResourceManager.GetString("Install_actionConfigure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download ähnelt.
        /// </summary>
        internal static string Install_actionDownload {
            get {
                return ResourceManager.GetString("Install_actionDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download-&gt;install ähnelt.
        /// </summary>
        internal static string Install_actionDownloadInstall {
            get {
                return ResourceManager.GetString("Install_actionDownloadInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install ähnelt.
        /// </summary>
        internal static string Install_actionInstall {
            get {
                return ResourceManager.GetString("Install_actionInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;no action&gt; ähnelt.
        /// </summary>
        internal static string Install_actionNothing {
            get {
                return ResourceManager.GetString("Install_actionNothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        internal static string Install_actionRemove {
            get {
                return ResourceManager.GetString("Install_actionRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uninstall previous-&gt;download-&gt;install ähnelt.
        /// </summary>
        internal static string Install_actionUninstallDownloadInstall {
            get {
                return ResourceManager.GetString("Install_actionUninstallDownloadInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uninstall previous-&gt;Install ähnelt.
        /// </summary>
        internal static string Install_actionUninstallInstall {
            get {
                return ResourceManager.GetString("Install_actionUninstallInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download ähnelt.
        /// </summary>
        internal static string Install_buttonDownload {
            get {
                return ResourceManager.GetString("Install_buttonDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install ähnelt.
        /// </summary>
        internal static string Install_buttonInstall {
            get {
                return ResourceManager.GetString("Install_buttonInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Action ähnelt.
        /// </summary>
        internal static string Install_colAction {
            get {
                return ResourceManager.GetString("Install_colAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application ähnelt.
        /// </summary>
        internal static string Install_colApplication {
            get {
                return ResourceManager.GetString("Install_colApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die State ähnelt.
        /// </summary>
        internal static string Install_colState {
            get {
                return ResourceManager.GetString("Install_colState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not all required applications are installed. ähnelt.
        /// </summary>
        internal static string Install_errAppsMissing {
            get {
                return ResourceManager.GetString("Install_errAppsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuration failed ähnelt.
        /// </summary>
        internal static string Install_errConfigureFailed {
            get {
                return ResourceManager.GetString("Install_errConfigureFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to download application [{0}] ähnelt.
        /// </summary>
        internal static string Install_errDownloadFailed {
            get {
                return ResourceManager.GetString("Install_errDownloadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to install application [{0}] ähnelt.
        /// </summary>
        internal static string Install_errInstallFailed {
            get {
                return ResourceManager.GetString("Install_errInstallFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uninstall failed ähnelt.
        /// </summary>
        internal static string Install_errRemoveFailed {
            get {
                return ResourceManager.GetString("Install_errRemoveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Press the &quot;download&quot; button to perform the download of all needed components ähnelt.
        /// </summary>
        internal static string Install_labelHeadingDownload {
            get {
                return ResourceManager.GetString("Install_labelHeadingDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Press the &quot;install&quot; button to perform all necessary actions to install your setup ähnelt.
        /// </summary>
        internal static string Install_labelHeadingInstall {
            get {
                return ResourceManager.GetString("Install_labelHeadingInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring ähnelt.
        /// </summary>
        internal static string Install_msgConfiguring {
            get {
                return ResourceManager.GetString("Install_msgConfiguring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading... ähnelt.
        /// </summary>
        internal static string Install_msgDownloading {
            get {
                return ResourceManager.GetString("Install_msgDownloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing... ähnelt.
        /// </summary>
        internal static string Install_msgInstalling {
            get {
                return ResourceManager.GetString("Install_msgInstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uninstalling... ähnelt.
        /// </summary>
        internal static string Install_msgUninstalling {
            get {
                return ResourceManager.GetString("Install_msgUninstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configured ähnelt.
        /// </summary>
        internal static string Install_stateConfigured {
            get {
                return ResourceManager.GetString("Install_stateConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloaded ähnelt.
        /// </summary>
        internal static string Install_stateDownloaded {
            get {
                return ResourceManager.GetString("Install_stateDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installed ähnelt.
        /// </summary>
        internal static string Install_stateInstalled {
            get {
                return ResourceManager.GetString("Install_stateInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unconfigured ähnelt.
        /// </summary>
        internal static string Install_stateNotConfigured {
            get {
                return ResourceManager.GetString("Install_stateNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not downloaded ähnelt.
        /// </summary>
        internal static string Install_stateNotDownloaded {
            get {
                return ResourceManager.GetString("Install_stateNotDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not installed ähnelt.
        /// </summary>
        internal static string Install_stateNotInstalled {
            get {
                return ResourceManager.GetString("Install_stateNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed ähnelt.
        /// </summary>
        internal static string Install_stateRemoved {
            get {
                return ResourceManager.GetString("Install_stateRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uninstall ähnelt.
        /// </summary>
        internal static string Install_stateUninstall {
            get {
                return ResourceManager.GetString("Install_stateUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Another version is already installed ähnelt.
        /// </summary>
        internal static string Install_stateVersionMismatch {
            get {
                return ResourceManager.GetString("Install_stateVersionMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MediaPortal Installation Tool ähnelt.
        /// </summary>
        internal static string MainWindow_AppName {
            get {
                return ResourceManager.GetString("MainWindow_AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back ähnelt.
        /// </summary>
        internal static string MainWindow_backButton {
            get {
                return ResourceManager.GetString("MainWindow_backButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit ähnelt.
        /// </summary>
        internal static string MainWindow_buttonClose {
            get {
                return ResourceManager.GetString("MainWindow_buttonClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This application will guide you through the installation of MediaPortal and all the required components. ähnelt.
        /// </summary>
        internal static string MainWindow_labelAppHeading {
            get {
                return ResourceManager.GetString("MainWindow_labelAppHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next ähnelt.
        /// </summary>
        internal static string MainWindow_nextButton {
            get {
                return ResourceManager.GetString("MainWindow_nextButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Continue ähnelt.
        /// </summary>
        internal static string ManualDownload_buttonContinue {
            get {
                return ResourceManager.GetString("ManualDownload_buttonContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The requested file still does not exist ähnelt.
        /// </summary>
        internal static string ManualDownload_errFileNotFound {
            get {
                return ResourceManager.GetString("ManualDownload_errFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hit &quot;continue&quot; when you finished downloading the requested file ähnelt.
        /// </summary>
        internal static string ManualDownload_labelDesc {
            get {
                return ResourceManager.GetString("ManualDownload_labelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have to manually download the following file ähnelt.
        /// </summary>
        internal static string ManualDownload_labelHeading {
            get {
                return ResourceManager.GetString("ManualDownload_labelHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open directory ähnelt.
        /// </summary>
        internal static string ManualDownload_linkDir {
            get {
                return ResourceManager.GetString("ManualDownload_linkDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Link ähnelt.
        /// </summary>
        internal static string ManualDownload_linkURL {
            get {
                return ResourceManager.GetString("ManualDownload_linkURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Manual download ähnelt.
        /// </summary>
        internal static string ManualDownload_Title {
            get {
                return ResourceManager.GetString("ManualDownload_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Browse ähnelt.
        /// </summary>
        internal static string MPSettings_buttonBrowse {
            get {
                return ResourceManager.GetString("MPSettings_buttonBrowse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have to supply a valid installation path for MediaPortal. ähnelt.
        /// </summary>
        internal static string MPSettings_errInvalidPath {
            get {
                return ResourceManager.GetString("MPSettings_errInvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please set the needed options for the MediaPortal installation: ähnelt.
        /// </summary>
        internal static string MPSettings_labelHeading {
            get {
                return ResourceManager.GetString("MPSettings_labelHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MediaPortal install dir: ähnelt.
        /// </summary>
        internal static string MPSettings_labelInstDir {
            get {
                return ResourceManager.GetString("MPSettings_labelInstDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the installation folder for MediaPortal ähnelt.
        /// </summary>
        internal static string MPSettings_msgSelectDir {
            get {
                return ResourceManager.GetString("MPSettings_msgSelectDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sorry your OS is not currently supported by MediaPortal ! ähnelt.
        /// </summary>
        internal static string OS_Support {
            get {
                return ResourceManager.GetString("OS_Support", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your OS is unsupported because Microsoft did not release several required hotfixes for it.
        ///Continue at your own risk ähnelt.
        /// </summary>
        internal static string OS_Warning {
            get {
                return ResourceManager.GetString("OS_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Which TV-Engine do you want to use ? ähnelt.
        /// </summary>
        internal static string TvEngineType_labelSectionHeader {
            get {
                return ResourceManager.GetString("TvEngineType_labelSectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Differences between TV-Server 1.0 and inbuild TV-Plugin of MediaPortal 1.0:
        ///+ full DVB-subtitle support
        ///+ support for HD-TV (dvb-s2 / h.264) and AAC audio (Norway, New Zealand, Australia)
        ///+ hybrid tuner support (cards that share a tuner for DVB or analog)
        ///+ automatically detects any TV-card (analog, DVB-C, -S, -S2, -T, ATSC)
        ///+ ATSC QAM (Cable TV) support
        ///+ allows to record in .mpg or .ts file format
        ///+ ATSC/DVB allows tuning multiple channels within same transponder/mux with one card
        ///+ provides TV to [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string TvEngineType_labelTvEngine {
            get {
                return ResourceManager.GetString("TvEngineType_labelTvEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inbuild TV-Plugin of MediaPortal 1.0. ähnelt.
        /// </summary>
        internal static string TvEngineType_rbTvBuildIn {
            get {
                return ResourceManager.GetString("TvEngineType_rbTvBuildIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MediaPortal TV-Server 1.0 ähnelt.
        /// </summary>
        internal static string TvEngineType_rbTvEngine {
            get {
                return ResourceManager.GetString("TvEngineType_rbTvEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Browse ähnelt.
        /// </summary>
        internal static string TvServerSettings_buttonBrowse {
            get {
                return ResourceManager.GetString("TvServerSettings_buttonBrowse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure Windows Firewall to allow external access to TV-Server ähnelt.
        /// </summary>
        internal static string TvServerSettings_checkBoxFirewall {
            get {
                return ResourceManager.GetString("TvServerSettings_checkBoxFirewall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have to supply a valid installation path for the TV-Server. ähnelt.
        /// </summary>
        internal static string TvServerSettings_errInvalidPath {
            get {
                return ResourceManager.GetString("TvServerSettings_errInvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please set the needed options for the TV-Server installation: ähnelt.
        /// </summary>
        internal static string TvServerSettings_labelHeading {
            get {
                return ResourceManager.GetString("TvServerSettings_labelHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TV-Server installation directory: ähnelt.
        /// </summary>
        internal static string TvServerSettings_labelInstDir {
            get {
                return ResourceManager.GetString("TvServerSettings_labelInstDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the installation folder for the TV-Server ähnelt.
        /// </summary>
        internal static string TvServerSettings_msgSelectDir {
            get {
                return ResourceManager.GetString("TvServerSettings_msgSelectDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to watch HDTV with MediaPortal ? ähnelt.
        /// </summary>
        internal static string WatchHDTv_labelSectionHeader {
            get {
                return ResourceManager.GetString("WatchHDTv_labelSectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I do not know what HD content is. ähnelt.
        /// </summary>
        internal static string WatchHDTv_maybe {
            get {
                return ResourceManager.GetString("WatchHDTv_maybe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No - I will not use MediaPortal to watch HD content. ähnelt.
        /// </summary>
        internal static string WatchHDTv_no {
            get {
                return ResourceManager.GetString("WatchHDTv_no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes - I will use MediaPortal to watch HD content. ähnelt.
        /// </summary>
        internal static string WatchHDTv_yes {
            get {
                return ResourceManager.GetString("WatchHDTv_yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to watch TV with MediaPortal ? ähnelt.
        /// </summary>
        internal static string WatchTV_labelSectionHeader {
            get {
                return ResourceManager.GetString("WatchTV_labelSectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No - I will not use MediaPortal to watch TV. ähnelt.
        /// </summary>
        internal static string WatchTV_off {
            get {
                return ResourceManager.GetString("WatchTV_off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes - I will use MediaPortal to watch TV. ähnelt.
        /// </summary>
        internal static string WatchTV_on {
            get {
                return ResourceManager.GetString("WatchTV_on", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Thank you for choosing MediaPortal... The FREE OpenSource MediaCenter! ähnelt.
        /// </summary>
        internal static string Welcome_labelHeading1 {
            get {
                return ResourceManager.GetString("Welcome_labelHeading1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This tool will guide you through the installation process ähnelt.
        /// </summary>
        internal static string Welcome_labelHeading2 {
            get {
                return ResourceManager.GetString("Welcome_labelHeading2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select your language before you continue ähnelt.
        /// </summary>
        internal static string Welcome_labelHeading3 {
            get {
                return ResourceManager.GetString("Welcome_labelHeading3", resourceCulture);
            }
        }
    }
}
