<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TvLibrary.Interfaces</name>
    </assembly>
    <members>
        <member name="M:TvLibrary.Interfaces.ServiceProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:TvLibrary.Interfaces.ServiceProvider.IsRegistered``1">
            <summary>
            This method returns true if the service is registered
            </summary>
            <typeparam name="T">Service type</typeparam>
            <returns>true if service is registered</returns>
        </member>
        <member name="M:TvLibrary.Interfaces.ServiceProvider.Add``1(System.Object)">
            <summary>
            Register a new service to the service provider
            </summary>
            <typeparam name="T">Service type</typeparam>
            <param name="service">service</param>
        </member>
        <member name="M:TvLibrary.Interfaces.ServiceProvider.Get``1">
            <summary>
            returns the service
            </summary>
            <typeparam name="T">service type</typeparam>
            <returns>service itself</returns>
            <remarks>if service is not registered an exception is thrown</remarks>
        </member>
        <member name="M:TvLibrary.Interfaces.ServiceProvider.Remove``1">
            <summary>
            removes a service from the service provider
            </summary>
            <typeparam name="T">Service type</typeparam>
        </member>
        <member name="M:TvLibrary.Interfaces.ServiceProvider.Replace``1(System.Object)">
            <summary>
            Replaces an instance of the service 
            </summary>
            <typeparam name="T">Service type</typeparam>
            <param name="service">new instance of the service</param>
        </member>
        <member name="P:TvLibrary.Interfaces.GlobalServiceProvider.Instance">
            <summary>
            returns the instance of the global ServiceProvider
            </summary>
        </member>
        <member name="T:TvLibrary.Interfaces.IQuality">
            <summary>
            interface for quality control of a card
            </summary>
        </member>
        <member name="T:TvLibrary.Epg.EpgLanguageText">
            <summary>
            class which holds the title, description and genre for all epg languages received
            </summary>
        </member>
        <member name="M:TvLibrary.Epg.EpgLanguageText.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EpgLanguageText"/> class.
            </summary>
            <param name="language">The language.</param>
            <param name="title">The title.</param>
            <param name="description">The description.</param>
            <param name="genre">The genre.</param>
        </member>
        <member name="P:TvLibrary.Epg.EpgLanguageText.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:TvLibrary.Epg.EpgLanguageText.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:TvLibrary.Epg.EpgLanguageText.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:TvLibrary.Epg.EpgLanguageText.Genre">
            <summary>
            Gets or sets the genre.
            </summary>
            <value>The genre.</value>
        </member>
        <member name="T:TvLibrary.Epg.EpgProgram">
            <summary>
            Class which contains a single epg-program
            </summary>
        </member>
        <member name="M:TvLibrary.Epg.EpgProgram.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:EpgProgram"/> class.
            </summary>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
        </member>
        <member name="M:TvLibrary.Epg.EpgProgram.CompareTo(TvLibrary.Epg.EpgProgram)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.Zero This object is equal to other. Greater than zero This object is greater than other.
            </returns>
        </member>
        <member name="P:TvLibrary.Epg.EpgProgram.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:TvLibrary.Epg.EpgProgram.StartTime">
            <summary>
            Gets or sets the start time.
            </summary>
            <value>The start time.</value>
        </member>
        <member name="P:TvLibrary.Epg.EpgProgram.EndTime">
            <summary>
            Gets or sets the end time.
            </summary>
            <value>The end time.</value>
        </member>
        <member name="T:TvLibrary.Channels.DisEqcType">
            <summary>
            enum describing the different DisEqc type
            </summary>
        </member>
        <member name="F:TvLibrary.Channels.DisEqcType.None">
            <summary>
            diseqc not used
            </summary>
        </member>
        <member name="F:TvLibrary.Channels.DisEqcType.SimpleA">
            <summary>
            Simple A
            </summary>
        </member>
        <member name="F:TvLibrary.Channels.DisEqcType.SimpleB">
            <summary>
            Simple B
            </summary>
        </member>
        <member name="F:TvLibrary.Channels.DisEqcType.Level1AA">
            <summary>
            Level 1 A/A
            </summary>
        </member>
        <member name="F:TvLibrary.Channels.DisEqcType.Level1BA">
            <summary>
            Level 1 B/A
            </summary>
        </member>
        <member name="F:TvLibrary.Channels.DisEqcType.Level1AB">
            <summary>
            Level 1 A/B
            </summary>
        </member>
        <member name="F:TvLibrary.Channels.DisEqcType.Level1BB">
            <summary>
            Level 1 B/B
            </summary>
        </member>
        <member name="T:TvLibrary.Channels.DVBSChannel">
            <summary>
            class holding all tuning details for DVBS
            </summary>
        </member>
        <member name="T:TvLibrary.Channels.DVBBaseChannel">
            <summary>
            base class for DVB channels
            </summary>
        </member>
        <member name="T:TvLibrary.Interfaces.IChannel">
            <summary>
            interface which describes a tv/radio channel
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.IChannel.Name">
            <summary>
            gets/sets the channel name
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.IChannel.IsRadio">
            <summary>
            boolean indication if this is a radio channel
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.IChannel.IsTv">
            <summary>
            boolean indication if this is a tv channel
            </summary>
        </member>
        <member name="M:TvLibrary.Channels.DVBBaseChannel.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:TvLibrary.Channels.DVBBaseChannel.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:TvLibrary.Channels.DVBBaseChannel.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:TvLibrary.Channels.DVBBaseChannel.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.LogicalChannelNumber">
            <summary>
            gets/set the pid of the PCR
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.PcrPid">
            <summary>
            Gets or sets the PCR pid.
            </summary>
            <value>The PCR pid.</value>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.PmtPid">
            <summary>
            gets/set the pid of the Program management table for the channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.NetworkId">
            <summary>
            gets/sets the network id of the channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.ServiceId">
            <summary>
            gets/sets the service id of the channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.TransportId">
            <summary>
            gets/sets the transport id of the channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.Name">
            <summary>
            gets/sets the channel name
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.Provider">
            <summary>
            gets/sets the channel provider name
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.Frequency">
            <summary>
            gets/sets the carrier frequency of the channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.IsRadio">
            <summary>
            boolean indication if this is a radio channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.IsTv">
            <summary>
            boolean indication if this is a tv channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBBaseChannel.FreeToAir">
            <summary>
            boolean indicating if this is a FreeToAir channel or an encrypted channel
            </summary>
        </member>
        <member name="M:TvLibrary.Channels.DVBSChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DVBSChannel"/> class.
            </summary>
        </member>
        <member name="M:TvLibrary.Channels.DVBSChannel.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:TvLibrary.Channels.DVBSChannel.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:TvLibrary.Channels.DVBSChannel.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:TvLibrary.Channels.DVBSChannel.Polarisation">
            <summary>
            gets/sets the Polarisation for this channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBSChannel.SymbolRate">
            <summary>
            gets/sets the symbolrate for this channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBSChannel.SwitchingFrequency">
            <summary>
            gets/sets the lnb switch frequency for this channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBSChannel.DisEqc">
            <summary>
            gets/sets the diseqc setting for this channel
            </summary>
        </member>
        <member name="T:TvLibrary.Epg.EpgChannel">
            <summary>
            class which holds all epg information received for a specific DVB tv/radio channel
            </summary>
        </member>
        <member name="M:TvLibrary.Epg.EpgChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EpgChannel"/> class.
            </summary>
        </member>
        <member name="M:TvLibrary.Epg.EpgChannel.Sort">
            <summary>
            Sorts all programs for this channel on time/date.
            </summary>
        </member>
        <member name="P:TvLibrary.Epg.EpgChannel.Channel">
            <summary>
            Gets or sets the channel.
            </summary>
            <value>The channel.</value>
        </member>
        <member name="P:TvLibrary.Epg.EpgChannel.Programs">
            <summary>
            Gets or sets the epg programs.
            </summary>
            <value>The programs.</value>
        </member>
        <member name="T:TvLibrary.Interfaces.ITVScanning">
            <summary>
            Interface for scanning new channels
            </summary>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVScanning.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVScanning.Reset">
            <summary>
            resets the scanner
            </summary>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVScanning.Scan(TvLibrary.Interfaces.IChannel)">
            <summary>
            Tunes to the channel specified and will start scanning for any channel
            </summary>
            <param name="channel">channel to tune to</param>
            <returns>list of channels found</returns>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVScanning.TvCard">
            <summary>
            returns the tv card used 
            </summary>
        </member>
        <member name="T:TvLibrary.Interfaces.AudioStreamType">
            <summary>
            Audio stream types
            </summary>
        </member>
        <member name="F:TvLibrary.Interfaces.AudioStreamType.Mpeg1">
            <summary>
            mpeg 1 audio
            </summary>
        </member>
        <member name="F:TvLibrary.Interfaces.AudioStreamType.Mpeg2">
            <summary>
            mpeg 2 audio
            </summary>
        </member>
        <member name="F:TvLibrary.Interfaces.AudioStreamType.AC3">
            <summary>
            ac3 audio
            </summary>
        </member>
        <member name="T:TvLibrary.Interfaces.IAudioStream">
            <summary>
            interface which describes a single audio stream
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.IAudioStream.Language">
            <summary>
            gets/sets the Audio language
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.IAudioStream.StreamType">
            <summary>
            gets/sets the audio stream type
            </summary>
        </member>
        <member name="T:TvLibrary.Implementations.DVB.AnalogAudioStream">
            <summary>
            class describing an analog audio stream
            </summary>
        </member>
        <member name="M:TvLibrary.Implementations.DVB.AnalogAudioStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AnalogAudioStream"/> class.
            </summary>
        </member>
        <member name="M:TvLibrary.Implementations.DVB.AnalogAudioStream.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:TvLibrary.Implementations.DVB.AnalogAudioStream.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:TvLibrary.Implementations.DVB.AnalogAudioStream.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:TvLibrary.Implementations.DVB.AnalogAudioStream.Language">
            <summary>
            gets/sets  Audio language
            </summary>
        </member>
        <member name="P:TvLibrary.Implementations.DVB.AnalogAudioStream.StreamType">
            <summary>
            gets/sets the audio stream type
            </summary>
        </member>
        <member name="P:TvLibrary.Implementations.DVB.AnalogAudioStream.AudioMode">
            <summary>
            Gets or sets the audio mode.
            </summary>
            <value>The audio mode.</value>
        </member>
        <member name="T:TvLibrary.Channels.DVBCChannel">
            <summary>
            class holding all tuning details for DVBC
            </summary>
        </member>
        <member name="M:TvLibrary.Channels.DVBCChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DVBCChannel"/> class.
            </summary>
        </member>
        <member name="M:TvLibrary.Channels.DVBCChannel.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:TvLibrary.Channels.DVBCChannel.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:TvLibrary.Channels.DVBCChannel.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:TvLibrary.Channels.DVBCChannel.SymbolRate">
            <summary>
            gets/sets the symbolrate for this channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.DVBCChannel.ModulationType">
            <summary>
            gets/sets the ModulationType for this channel
            </summary>
        </member>
        <member name="T:TvLibrary.Channels.ATSCChannel">
            <summary>
            class holding all tuning details for ATSC
            </summary>
        </member>
        <member name="M:TvLibrary.Channels.ATSCChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ATSCChannel"/> class.
            </summary>
        </member>
        <member name="M:TvLibrary.Channels.ATSCChannel.ToString">
            <summary>
            Toes the string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TvLibrary.Channels.ATSCChannel.Equals(System.Object)">
            <summary>
            Equalses the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:TvLibrary.Channels.ATSCChannel.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:TvLibrary.Channels.ATSCChannel.ModulationType">
            <summary>
            gets/sets the modulation type
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.ATSCChannel.PhysicalChannel">
            <summary>
            gets/sets the physical channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.ATSCChannel.MajorChannel">
            <summary>
            gets/sets the major channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.ATSCChannel.MinorChannel">
            <summary>
            gets/sets the minor channel
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.ATSCChannel.SymbolRate">
            <summary>
            gets/sets the symbolrate
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.ATSCChannel.AudioPid">
            <summary>
            gets/sets the AudioPid
            </summary>
        </member>
        <member name="P:TvLibrary.Channels.ATSCChannel.VideoPid">
            <summary>
            gets/sets the VideoPid
            </summary>
        </member>
        <member name="T:TvLibrary.CountryCollection">
            <summary>
            class which holds a collection of all countries
            </summary>
        </member>
        <member name="M:TvLibrary.CountryCollection.GetTunerCountry(System.String)">
            <summary>
            Returns a country specified by name
            </summary>
            <param name="countryName">name of country</param>
            <returns><see cref="T:TvLibrary.Country"/> object or null if country is not found</returns>
        </member>
        <member name="M:TvLibrary.CountryCollection.GetTunerCountryFromID(System.Int32)">
            <summary>
            Returns a country specified by id
            </summary>
            <param name="countryId">id of country</param>
            <returns><see cref="T:TvLibrary.Country"/>  object or null if country is not found</returns>
        </member>
        <member name="M:TvLibrary.CountryCollection.GetTunerCountryFromCode(System.String)">
            <summary>
            Returns a country specified by id
            </summary>
            <param name="code">country code</param>
            <returns><see cref="T:TvLibrary.Country"/>  object or null if country is not found</returns>
        </member>
        <member name="P:TvLibrary.CountryCollection.Countries">
            <summary>
            Returns an array of all countries
            </summary>
        </member>
        <member name="T:TvLibrary.Teletext.PageEventHandler">
            <summary>
            delegate which is called when a teletext page has been received,modified or deleted
            </summary>
            <param name="pageNumber">pagenumber (100-899)</param>
            <param name="subPageNumber">subpagenumber (0-79)</param>
        </member>
        <member name="T:TvLibrary.Teletext.ITeletext">
            <summary>
            teletext decoder interface
            </summary>
        </member>
        <member name="M:TvLibrary.Teletext.ITeletext.GetTeletextChannelName">
            <summary>
            returns the channel name found in packet 8/30
            </summary>
            <returns>string containing the channel name</returns>
        </member>
        <member name="M:TvLibrary.Teletext.ITeletext.ClearTeletextChannelName">
            <summary>
            clears the teletext channel name
            </summary>
        </member>
        <member name="M:TvLibrary.Teletext.ITeletext.SetPageSize(System.Int32,System.Int32)">
            <summary>
            sets the width/height of the bitmap generated by GetPage()
            </summary>
            <param name="renderWidth">width in pixels</param>
            <param name="renderHeight">height in pixels</param>
        </member>
        <member name="M:TvLibrary.Teletext.ITeletext.GetPage(System.Int32,System.Int32)">
            <summary>
            Gets the teletext page and renders it to a Bitmap
            </summary>
            <param name="page">pagenumber (0x100-0x899)</param>
            <param name="subpage">subpagenumber (0x0-0x79)</param>
            <returns>bitmap (or null if page is not found)</returns>
        </member>
        <member name="M:TvLibrary.Teletext.ITeletext.GetRawPage(System.Int32,System.Int32)">
            <summary>
            Gets the raw teletext page.
            </summary>
            <param name="page">pagenumber (0x100-0x899)</param>
            <param name="subpage">subpagenumber (0x0-0x79)</param>
            <returns>raw teletext page (or null if page is not found)</returns>
        </member>
        <member name="M:TvLibrary.Teletext.ITeletext.NumberOfSubpages(System.Int32)">
            <summary>
            returns the total number of subpages for a pagnumber
            </summary>
            <param name="currentPageNumber">pagenumber 0x100-0x899</param>
            <returns>number of subpages for this pagenumber</returns>
        </member>
        <member name="M:TvLibrary.Teletext.ITeletext.RotationTime(System.Int32)">
            <summary>
            returns the rotation time for the page.
            </summary>
            <param name="currentPageNumber">The current page number.</param>
            <returns>timespan contain the rotation time</returns>
        </member>
        <member name="E:TvLibrary.Teletext.ITeletext.OnPageUpdated">
            <summary>
            event which gets fired when the current selected pagenumber is updated
            </summary>
        </member>
        <member name="E:TvLibrary.Teletext.ITeletext.OnPageAdded">
            <summary>
            event which gets fired when the current selected pagenumber is added
            </summary>
        </member>
        <member name="E:TvLibrary.Teletext.ITeletext.OnPageDeleted">
            <summary>
            event which gets fired when the current selected pagenumber is removed
            </summary>
        </member>
        <member name="P:TvLibrary.Teletext.ITeletext.PageRed">
            <summary>
            returns the pagenumber for the red button
            </summary>
        </member>
        <member name="P:TvLibrary.Teletext.ITeletext.PageGreen">
            <summary>
            returns the pagenumber for the green button
            </summary>
        </member>
        <member name="P:TvLibrary.Teletext.ITeletext.PageYellow">
            <summary>
            returns the pagenumber for the yellow button
            </summary>
        </member>
        <member name="P:TvLibrary.Teletext.ITeletext.PageBlue">
            <summary>
            returns the pagenumber for the blue button
            </summary>
        </member>
        <member name="P:TvLibrary.Teletext.ITeletext.PageSelectText">
            <summary>
            Gets the page select text.
            </summary>
            <value>The page select text.</value>
        </member>
        <member name="P:TvLibrary.Teletext.ITeletext.HiddenMode">
            <summary>
            turns on/off the conceal (hidden) mode
            </summary>
        </member>
        <member name="P:TvLibrary.Teletext.ITeletext.TransparentMode">
            <summary>
            turns on/off transparent mode. In transparent mode the
            teletext page is rendered on transparent background
            </summary>
        </member>
        <member name="T:TvLibrary.Implementations.DVB.DVBAudioStream">
            <summary>
            class which holds the audio stream details for a DVB channel
            </summary>
        </member>
        <member name="M:TvLibrary.Implementations.DVB.DVBAudioStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DVBAudioStream"/> class.
            </summary>
        </member>
        <member name="M:TvLibrary.Implementations.DVB.DVBAudioStream.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:TvLibrary.Implementations.DVB.DVBAudioStream.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:TvLibrary.Implementations.DVB.DVBAudioStream.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:TvLibrary.Implementations.DVB.DVBAudioStream.Language">
            <summary>
            gets/sets  Audio language
            </summary>
        </member>
        <member name="P:TvLibrary.Implementations.DVB.DVBAudioStream.StreamType">
            <summary>
            gets/sets the audio stream type
            </summary>
        </member>
        <member name="P:TvLibrary.Implementations.DVB.DVBAudioStream.Pid">
            <summary>
            gets/sets the audio pid for this stream
            </summary>
        </member>
        <member name="T:TvLibrary.Implementations.AnalogChannel">
            <summary>
            class holding all tuning details for analog channels
            </summary>
        </member>
        <member name="M:TvLibrary.Implementations.AnalogChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AnalogChannel"/> class.
            </summary>
        </member>
        <member name="M:TvLibrary.Implementations.AnalogChannel.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:TvLibrary.Implementations.AnalogChannel.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:TvLibrary.Implementations.AnalogChannel.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:TvLibrary.Implementations.AnalogChannel.VideoSource">
            <summary>
            Gets or sets the video source.
            </summary>
            <value>The video source.</value>
        </member>
        <member name="P:TvLibrary.Implementations.AnalogChannel.TunerSource">
            <summary>
            Gets or sets the tuner source.
            </summary>
            <value>The tuner source.</value>
        </member>
        <member name="P:TvLibrary.Implementations.AnalogChannel.Country">
            <summary>
            gets/sets the country
            </summary>
        </member>
        <member name="P:TvLibrary.Implementations.AnalogChannel.Name">
            <summary>
            gets/sets the channel name
            </summary>
        </member>
        <member name="P:TvLibrary.Implementations.AnalogChannel.Frequency">
            <summary>
            gets/sets the frequency
            </summary>
        </member>
        <member name="P:TvLibrary.Implementations.AnalogChannel.ChannelNumber">
            <summary>
            gets/sets the channel number
            </summary>
        </member>
        <member name="P:TvLibrary.Implementations.AnalogChannel.IsRadio">
            <summary>
            boolean indicating if this is a radio channel
            </summary>
        </member>
        <member name="P:TvLibrary.Implementations.AnalogChannel.IsTv">
            <summary>
            boolean indicating if this is a tv channel
            </summary>
        </member>
        <member name="T:TvLibrary.Implementations.AnalogChannel.VideoInputType">
            <summary>
            Video input type
            </summary>
        </member>
        <member name="F:TvLibrary.Implementations.AnalogChannel.VideoInputType.Tuner">
            <summary>
            Tuner input
            </summary>
        </member>
        <member name="F:TvLibrary.Implementations.AnalogChannel.VideoInputType.VideoInput1">
            <summary>
            CVBS input #1
            </summary>
        </member>
        <member name="F:TvLibrary.Implementations.AnalogChannel.VideoInputType.VideoInput2">
            <summary>
            CVBS input #2
            </summary>
        </member>
        <member name="F:TvLibrary.Implementations.AnalogChannel.VideoInputType.VideoInput3">
            <summary>
            CVBS input #3
            </summary>
        </member>
        <member name="F:TvLibrary.Implementations.AnalogChannel.VideoInputType.SvhsInput1">
            <summary>
            SVHS input #1
            </summary>
        </member>
        <member name="F:TvLibrary.Implementations.AnalogChannel.VideoInputType.SvhsInput2">
            <summary>
            SVHS input #2
            </summary>
        </member>
        <member name="F:TvLibrary.Implementations.AnalogChannel.VideoInputType.SvhsInput3">
            <summary>
            SVHS input #3
            </summary>
        </member>
        <member name="F:TvLibrary.Implementations.AnalogChannel.VideoInputType.RgbInput1">
            <summary>
            RGB input #1
            </summary>
        </member>
        <member name="F:TvLibrary.Implementations.AnalogChannel.VideoInputType.RgbInput2">
            <summary>
            RGB input #2
            </summary>
        </member>
        <member name="F:TvLibrary.Implementations.AnalogChannel.VideoInputType.RgbInput3">
            <summary>
            RGB input #3
            </summary>
        </member>
        <member name="T:TvLibrary.Epg.Languages">
            <summary>
            Class which holds all dvb epg languages
            </summary>
        </member>
        <member name="M:TvLibrary.Epg.Languages.GetLanguages">
            <summary>
            Gets the languages.
            </summary>
            <returns>list of all languages</returns>
        </member>
        <member name="M:TvLibrary.Epg.Languages.GetLanguageCodes">
            <summary>
            Gets the language codes.
            </summary>
            <returns>list of all language codes</returns>
        </member>
        <member name="M:TvLibrary.Epg.Languages.GetLanguageFromCode(System.String)">
            <summary>
            Gets the language from a language code.
            </summary>
            <param name="code">The code.</param>
            <returns>language</returns>
        </member>
        <member name="T:TvLibrary.Interfaces.IEpgCallback">
            <summary>
            callback interface for the EPG
            </summary>
        </member>
        <member name="M:TvLibrary.Interfaces.IEpgCallback.OnEpgReceived">
            <summary>
            Called when epg is received.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TvLibrary.Interfaces.BaseEpgGrabber">
            <summary>
            Base class used for dvb epg-grabbing
            </summary>
        </member>
        <member name="M:TvLibrary.Interfaces.BaseEpgGrabber.OnEpgCancelled">
            <summary>
            Gets called when epg has been cancelled
            Should be overriden by the class
            </summary>
        </member>
        <member name="M:TvLibrary.Interfaces.BaseEpgGrabber.OnEpgReceived">
            <summary>
            Gets called when epg has been received
            Should be overriden by the class
            </summary>
            <returns></returns>
        </member>
        <member name="T:TvLibrary.Interfaces.ITVEPG">
            <summary>
            interface for dvb epg grabbing
            </summary>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVEPG.GrabEpg(TvLibrary.Interfaces.BaseEpgGrabber)">
            <summary>
            Starts the EPG grabber.
            When the epg has been received the OnEpgReceived event will be fired
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVEPG.Epg">
            <summary>
            returns a list of all epg data for each channel found.
            </summary>
            <value>The epg.</value>
        </member>
        <member name="T:TvLibrary.Log.Log">
            <summary>
            An implementation of a log mechanism for the GUI library.
            </summary>
        </member>
        <member name="M:TvLibrary.Log.Log.#ctor">
            <summary>
            Private constructor of the GUIPropertyManager. Singleton. Do not allow any instance of this class.
            </summary>
        </member>
        <member name="M:TvLibrary.Log.Log.#cctor">
            <summary>
            Deletes the logfile.
            </summary>
        </member>
        <member name="M:TvLibrary.Log.Log.BackupLogFiles">
            <summary>
            Backups the log files.
            </summary>
        </member>
        <member name="M:TvLibrary.Log.Log.BackupLogFile">
            <summary>
            Backups the log file.
            </summary>
        </member>
        <member name="M:TvLibrary.Log.Log.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:TvLibrary.Log.Log.Write(System.Exception)">
            <summary>
            Writes the specified exception to the log file
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:TvLibrary.Log.Log.Write(System.String,System.Object[])">
            <summary>
            Write a string to the logfile.
            </summary>
            <param name="format">The format of the string.</param>
            <param name="arg">An array containing the actual data of the string.</param>
        </member>
        <member name="M:TvLibrary.Log.Log.WriteThreadId(System.String,System.Object[])">
            <summary>
            Write a string to the logfile.
            </summary>
            <param name="format">The format of the string.</param>
            <param name="arg">An array containing the actual data of the string.</param>
        </member>
        <member name="M:TvLibrary.Log.Log.Error(System.String,System.Object[])">
            <summary>
            Logs the message to the error file
            </summary>
            <param name="format">The format.</param>
            <param name="arg">The arg.</param>
        </member>
        <member name="M:TvLibrary.Log.Log.Info(System.String,System.Object[])">
            <summary>
            Logs the message to the info file
            </summary>
            <param name="format">The format.</param>
            <param name="arg">The arg.</param>
        </member>
        <member name="M:TvLibrary.Log.Log.Debug(System.String,System.Object[])">
            <summary>
            Logs the message to the debug file
            </summary>
            <param name="format">The format.</param>
            <param name="arg">The arg.</param>
        </member>
        <member name="M:TvLibrary.Log.Log.WriteFile(System.String,System.Object[])">
            <summary>
            Logs the message to the info file
            </summary>
            <param name="format">The format.</param>
            <param name="arg">The arg.</param>
        </member>
        <member name="M:TvLibrary.Log.Log.WriteToFile(TvLibrary.Log.Log.LogType,System.String,System.Object[])">
            <summary>
            Writes the file.
            </summary>
            <param name="logType">the type of logging.</param>
            <param name="format">The format.</param>
            <param name="arg">The arg.</param>
        </member>
        <member name="F:TvLibrary.Log.Log.LogType.Debug">
            <summary>
            Debug logging
            </summary>
        </member>
        <member name="F:TvLibrary.Log.Log.LogType.Info">
            <summary>
            normal logging
            </summary>
        </member>
        <member name="F:TvLibrary.Log.Log.LogType.Error">
            <summary>
            error logging
            </summary>
        </member>
        <member name="T:TvLibrary.Country">
            <summary>
            Class which holds the details about a country like the 
            short country id, the full name of the country and the iso code for the country
            </summary>
        </member>
        <member name="M:TvLibrary.Country.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Country"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="country">The country.</param>
            <param name="code">The code.</param>
        </member>
        <member name="M:TvLibrary.Country.#ctor(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Country"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="country">The country.</param>
            <param name="code">The code.</param>
            <param name="code">country index.</param>
        </member>
        <member name="M:TvLibrary.Country.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:TvLibrary.Country.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:TvLibrary.Country.Id">
            <summary>
            get/sets  the country id
            </summary>
        </member>
        <member name="P:TvLibrary.Country.Name">
            <summary>
            gets/sets the country name
            </summary>
        </member>
        <member name="P:TvLibrary.Country.Code">
            <summary>
            gets/sets the country code
            </summary>
        </member>
        <member name="T:TvLibrary.Channels.DVBTChannel">
            <summary>
            class holding all tuning details for DVBT
            </summary>
        </member>
        <member name="M:TvLibrary.Channels.DVBTChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DVBTChannel"/> class.
            </summary>
        </member>
        <member name="M:TvLibrary.Channels.DVBTChannel.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:TvLibrary.Channels.DVBTChannel.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:TvLibrary.Channels.DVBTChannel.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:TvLibrary.Channels.DVBTChannel.BandWidth">
            <summary>
            gets/sets the bandwidth for this channel
            </summary>
        </member>
        <member name="T:TvLibrary.TvException">
            <summary>
            Exception class for the tv library
            </summary>
        </member>
        <member name="M:TvLibrary.TvException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TvException"/> class.
            </summary>
        </member>
        <member name="M:TvLibrary.TvException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TvException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:TvLibrary.TvException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:TvException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:TvLibrary.Interfaces.CamType">
            <summary>
            cam types
            </summary>
        </member>
        <member name="F:TvLibrary.Interfaces.CamType.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:TvLibrary.Interfaces.CamType.Viaccess">
            <summary>
            Viacess cam
            </summary>
        </member>
        <member name="F:TvLibrary.Interfaces.CamType.Aston">
            <summary>
            Aston cam
            </summary>
        </member>
        <member name="F:TvLibrary.Interfaces.CamType.Conax">
            <summary>
            Conax cam
            </summary>
        </member>
        <member name="F:TvLibrary.Interfaces.CamType.CryptoWorks">
            <summary>
            Cryptoworks cam
            </summary>
        </member>
        <member name="T:TvLibrary.Interfaces.ITVCard">
            <summary>
            interface for a tv card
            </summary>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVCard.CanTune(TvLibrary.Interfaces.IChannel)">
            <summary>
            Method to check if card can tune to the channel specified
            </summary>
            <returns>true if card can tune to the channel otherwise false</returns>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVCard.StopGraph">
            <summary>
            Stops the current graph
            </summary>
            <returns></returns>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVCard.GrabEpg(TvLibrary.Interfaces.BaseEpgGrabber)">
            <summary>
            Grabs the epg.
            </summary>
            <param name="callback">The callback which gets called when epg is received or canceled.</param>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVCard.TuneScan(TvLibrary.Interfaces.IChannel)">
            <summary>
            tune the card to the channel specified by IChannel
            </summary>
            <param name="channel">channel to tune</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVCard.Tune(TvLibrary.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVCard.StartTimeShifting(System.String)">
            <summary>
            Starts timeshifting. Note card has to be tuned first
            </summary>
            <param name="fileName">filename used for the timeshiftbuffer</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVCard.StopTimeShifting">
            <summary>
            Stops timeshifting
            </summary>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVCard.StartRecording(DirectShowLib.SBE.RecordingType,System.String,System.Int64)">
            <summary>
            Starts recording
            </summary>
            <param name="recordingType">unused</param>
            <param name="fileName">filename to which to recording should be saved</param>
            <param name="startTime">unused</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVCard.StopRecording">
            <summary>
            Stop recording
            </summary>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:TvLibrary.Interfaces.ITVCard.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.Name">
            <summary>
            Gets/sets the card name
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.DevicePath">
            <summary>
            Gets/sets the card device
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.TimeShiftFileName">
            <summary>
            gets the current filename used for timeshifting
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.StartOfTimeShift">
            <summary>
            returns the date/time when timeshifting has been started for the card specified
            </summary>
            <returns>DateTime containg the date/time when timeshifting was started</returns>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.RecordingStarted">
            <summary>
            returns the date/time when recording has been started for the card specified
            </summary>
            <returns>DateTime containg the date/time when recording was started</returns>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.IsReceivingAudioVideo">
            <summary>
            Returns true when unscrambled audio/video is received otherwise false
            </summary>
            <returns>true of false</returns>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.FileName">
            <summary>
            gets the current filename used for recording
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.IsRecording">
            <summary>
            returns true if card is currently recording
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.IsTimeShifting">
            <summary>
            returns true if card is currently timeshifting
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.IsEpgGrabbing">
            <summary>
            returns true if card is currently grabbing the epg
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.IsScanning">
            <summary>
            returns true if card is currently scanning
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.Channel">
            <summary>
            returns the IChannel to which the card is currently tuned
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.MinChannel">
            <summary>
            returns the min. channel number for analog cards
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.MaxChannel">
            <summary>
            returns the max. channel number for analog cards
            </summary>
            <value>The max channel.</value>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.IsTimeshiftingTransportStream">
            <summary>
            returns true if we timeshift in transport stream mode
            false we timeshift in program stream mode
            </summary>
            <value>true for transport stream, false for program stream.</value>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.IsRecordingTransportStream">
            <summary>
            returns true if we record in transport stream mode
            false we record in program stream mode
            </summary>
            <value>true for transport stream, false for program stream.</value>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.CamType">
            <summary>
            Gets or sets the type of the cam.
            </summary>
            <value>The type of the cam.</value>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.cardType">
            <summary>
            Gets/sets the card type
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.Epg">
            <summary>
            returns a list of all epg data for each channel found.
            </summary>
            <value>The epg.</value>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.ScanningInterface">
            <summary>
            returns the ITVScanning interface used for scanning channels
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.GrabTeletext">
            <summary>
            Turn on/off teletext grabbing
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.TeletextDecoder">
            <summary>
            returns the ITeletext interface used for retrieving the teletext pages
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.HasTeletext">
            <summary>
            Property which returns true when the current channel contains teletext
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.AvailableAudioStreams">
            <summary>
            returns the list of available audio streams
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.CurrentAudioStream">
            <summary>
            get/set the current selected audio stream
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.Quality">
            <summary>
            Get/Set the quality
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.SupportsQualityControl">
            <summary>
            Property which returns true if card supports quality control
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.IsTunerLocked">
            <summary>
            When the tuner is locked onto a signal this property will return true
            otherwise false
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.SignalQuality">
            <summary>
            returns the signal quality
            </summary>
        </member>
        <member name="P:TvLibrary.Interfaces.ITVCard.SignalLevel">
            <summary>
            returns the signal level
            </summary>
        </member>
    </members>
</doc>
