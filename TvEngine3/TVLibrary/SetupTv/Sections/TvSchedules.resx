<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA4
        DgAAAk1TRnQBSQFMAgEBAgEAAQUBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBoAAQMCAQEDARICAQEXASACAQEtASACAQEtARkCAQEhARsCAQElARwCAQEn
        ARQCAQEZARICAQEXARkCAQEhARUCAQEbAQkCAQEKAQIDARAAAQIDAQEHAgEBBwEQAgEBFAEaAgEBIwEg
        AgEBLQEhAgEBLwEdAgEBKAEUAgEBGgEKAgEBCwEDAgEBA5AAAQIDAQEaAQEBAgEiAUIBEgEyAZ4BMwEq
        AZAB8gErAR8BgwHvATcBDAEzAbUBOwEaAVgBywE5ARkBaAHRATwBCwEsAZ8BQAENASYBlAFCARYBTQGw
        AT4BDAE2AZ0BLgEDAQgBSgEJAgEBCgwAAQMCAQEDAQ0CAQEQASkBAgEFAT4BQgEOASYBjgE9ASABYwHS
        ATIBKgGRAfMBKQEmAZsB+wEvARoBcQHiATsBDQE5Aa4BMwEDAQkBWAEXAgEBHgEGAgEBBowAAQoCAQEM
        AUoBGgE9AaYCQwG0Af4BNgE3Aa0B/wIsAaUB/wIjAZ0B/wEtASABcwHtATgBIAF3Ad0BLwEjAYsB7wEz
        AR4BbwHiAUMBGQFSAbcBQAEUAVEBswE+AREBSQGuAScBAgEFATsBAwIBAQIEAAEDAgEBAgEPAgEBEwE5
        AQgBEAFlAUwBNgGDAd4BRAFDAbUB/QI9AbMB/wE2ATcBrQH/AS8BMAGoAf8CKgGjAf8CJQGfAf8BJgEg
        AZAB9gE8AQkBKgGbARkCAQEiAQUCAQEFiAABJgECAQMBOAFaAVYBvAH5AVMBVAHBAf8BgAGBAc0B/wGa
        AZsB1QH/AlIBtAH/ASUBJAGXAf4BeQFpAZUB6gFnAV4BrwH0AS0BJAGTAfQBYwE+AWABxQF0AUgBaAGz
        AUoBHgFUAbMBPwELATEBlQEKAgEBDAQAAQwCAQEOATcBBwENAVoBWQFJAZoB5wFXAVgBxgH/AVEBUgHB
        Af8CZAHEAf8CggHOAf8CnAHXAf8ClQHTAf8CbAHAAf8CMgGlAf8BJQEfAZEB+AE8AQoBKgGbARgCAQEf
        AQMCAQEDgAABAwIBAQIBUgEhAT4BoAFiAWQBzgH/AVkBWgHEAf8BhwGIAdIB/wK3AeEB/wLAAeQB/wIr
        AaIB/wFjAV0BmgH4Aa4BpQHMAfQBQAE3AZ4B9AFGATIBdwHjAYgBXQFwAbUBgAFUAWsBswE+ARIBTwGz
        ARkCAQEiAQMCAQECAR4CAQEpAVwBPAFyAcsBaQFqAdUB/wFbAV0BxAH/AVYBVwHDAf8BaQFqAckB/wGK
        AYsB0wH/AagBqQHdAf8CuwHjAf8CwQHlAf8CmwHUAf8CMQGlAf8BJgEgAZAB9gEyAQMBCQFXAQoCAQEL
        gAABBwIBAQgBcAFhAbEB6AFfAWEBvAH/AVUBVwG6Af8CgQHSAf8CtwHjAf8CuwHjAf8CUwG1Af8BPgE8
        AZgB/QGoAZ8BxwH0AX0BdAG4AfQBNQEsAZMB8wGFAVoBbQG3AYcBWwFvAbMBRAEYAVIBswEzAQMBDAFZ
        AQcCAQEIAUABDQEXAWoCdwHZAfwBbQFvAdQB/wFVAVYBrQH/AVQBVgG2Af8BXwFgAccB/wGDAYQB0wH/
        AqgB3gH/ArsB5AH/Ar0B5AH/ArYB4AH/AmQBuwH/AiQBnwH/ATsBDQE5Aa4BFAIBARqAAAENAgEBEAF+
        AXoB1wH4AVMBVAGdAf8BUgFTAagB/wFuAW8BzwH/AaoBqwHfAf8CqwHdAf8BcwF0AcQB/wEuAS0BmgH+
        AZcBkAG8AfUBiQGBAb0B9AE0ASwBmQH0AXwBUgFpAbkBfwFTAW0BswFSASYBWQGzAT0BCQEiAYIBDQIB
        ARABWAEmAUIBmwGBAYMB6AH/AWUBZgG7Af8BTAFOAZMB/wFRAVIBpAH/AVYBWAG7Af8BcQFzAdAB/wKb
        AdwB/wKuAeAB/wGtAa4B3wH/AaMBpAHaAf8CfgHJAf8CKgGjAf8BLgEZAXAB4gEdAgEBKIAAARACAQEU
        AYkBiwHsAf4BRQFHAX4B/wFIAUkBiwH/AVgBWgG9Af8BhgGHAdUB/wGIAYkB0QH/AnMBxgH/AisBogH/
        AXgBcQGuAfUBdQFtAbQB9AE1AS4BmwH0AWkBQQFiAbsBbgFCAWYBswFXASsBXAGzAUABDQE1AZYBEAIB
        ARQBaAE9AWYBtAGIAYsB7gH/AVMBVQGVAf8BQgFDAXsB/wFHAUgBiAH/AU8BUAGfAf8BWQFbAb8B/wJ3
        AdEB/wGKAYsB1QH/AYoBiwHTAf8BgwGEAc4B/wJ3AccB/wEvATABqAH/ASkBJgGbAfsBIQIBAS+AAAEP
        AgEBEwKOAesB/AFAAUEBcAH/AjoBbQH/AUoBSwGVAf8BWQFbAb4B/wFbAVwBwgH/AlcBvAH/ATABMQGk
        Af8BUwFNAaAB9QFYAVABpgH0ATkBMgGbAfQBVAErAVoBugFYAS4BXwGzAVEBJQFZAbMBQgEOAS8BkAEP
        AgEBEwFmATkBXAGtAZABkgHzAf8BVwFZAZcB/wE3ATgBYgH/AjkBagH/AT8BQAF7Af8BSgFLAZcB/wFT
        AVUBtAH/AVsBXAHBAf8BWwFcAcQB/wJcAcAB/wFYAVkBvQH/ATYBNwGtAf8BMAEoAZMB9AEgAgEBLYAA
        AQsCAQENAY4BiAHcAfQBSAFJAXwB/wEuAS8BUgH/ATkBOgFuAf8BSAFJAZgB/wFJAUoBrAH/AUQBRQG1
        Af8CNwGcAf4BRgE/AY8B9QFFAT0BnAH0AT0BNQGbAfQBTAEkAUwBuQFQASUBVwGzAU0BIQFZAbMBPQEK
        ARwBdgELAgEBDQFVASEBNAGMAZUBmAH4Af8BcwF1AcIB/wEwATEBUgH/AS0BLgFRAf8BMQEyAVsB/wE6
        ATsBcAH/AUMBRAGIAf8BSQFLAZ4B/wFKAUsBqQH/AUcBSAGwAf8BRQFGAbUB/wI9AbMB/wE/ASABYwHS
        ARoCAQEjgAABBgIBAQYBfgFlAaAB1wFwAXEBugH/ASYBJwFDAf8BLwEwAVYB/wE+AT8BfAH/AUQBRgGX
        Af8BSgFLAbkB/wE5ATcBiAH7AUYBPwGEAfQBSQFCAZoB9AE/ATUBjgHwAUoBIAFAAbYBTwEjAU4BswFR
        ASUBXQGzASwBAwEGAUMBBgIBAQYBNAEHAQsBTwGQAYoB2wH0AZQBlwH1Af8BQgFDAW4B/wEmAScBQwH/
        ASkBKgFIAf8BLwEwAVgB/wE4ATkBbQH/AUEBQgGCAf8BRAFFAZMB/wFFAUYBngH/AUoBSwG4Af8BRAFD
        AbQB/QFCAQ4BJgGOARACAQEUgAABAgMBAUcBFAEeAXQBlAGXAfQB/wE4ATkBXgH/ASkBKgFJAf8BNwE4
        AWkB/wFLAUwBmwH/AVUBVgHFAf8BNgEvAV0B9AFOAUcBiQH0AVQBTAGoAfQBPQEhAUcB1wFJAR4BOAG0
        AVQBKQFWAbMBUwEmAVkBrgESAgEBFwECAwEBFgIBARwBXwEuAUgBoAGZAZoB9QH9AX0BfwHOAf8BPgFA
        AWkB/wEnASgBQwH/ASoBKwFKAf8CMgFcAf8BOgE7AXAB/wFFAUYBjAH/AVMBVQG0Af8BVgFXAcUB/wFM
        ATYBgwHeASkBAgEFAT4BBwIBAQeEAAEXAgEBHgGNAX8BygHrAY0BkAHsAf8BTwFRAYkB/wFVAVYBmwH/
        AW0BbwHWAf8BVQFTAa8B+gFMATkBZQHkAW4BZwHCAfQBZAFaAbUB8QFJASEBOgG8AVsBLgFWAbMBYQE1
        AWkBswFFAREBJAF6AQYCAQEGBAABBwIBAQcBJQEDAQQBNQFzAVIBgQHHAZkBmgH1Af0BkwGWAfUB/wFw
        AXEBuwH/AU0BTwGFAf8BRgFIAX8B/wFcAV0BqwH/AWsBbQHPAf8BaQFqAdUB/wFaAUkBmgHnAToBCAER
        AWYBDgIBAREBAgMBhAABBgIBAQYBPwENARQBYgGSAY8B5gH4AZABkgHzAf8BhAGGAeoB/wJxAdEB/QFu
        AVsBmwHlAXkBYwGrAdwBcwFiAbMB5wFnAUkBfQHQAXEBRgF2AbUBbAFBAXMBswFXASQBRQGXARgBAQEC
        AR8BAgMBBAABAgMBAQoCAQELASUBAwEEATUBXgEuAUcBnwGOAYkB2gHzAZUBmAH4Af8BkAGSAfMB/wGI
        AYsB7gH/AYEBgwHoAf8CdwHZAfwBXQE8AXIBywE3AQcBDgFaARACAQEUAQMCAQECjAABDQIBAQ8BPAEL
        AREBXQFlATgBWgGrAV8BMQFSAakBQAEMARQBdAFVASEBNgGNAVsBKAFDAZQBPAEKARIBYwE8AQwBEgFe
        AVQBHwEzAX0BRQETASABawEcAgIBJgEEAgEBBAwAAQIDAQEHAgEBBwEWAgEBHAE1AQcBCwFQAVUBIQE0
        AYwBZgE5AVwBrAFoAT0BZgG0AVgBJgFCAZsBQAENARcBagEeAgEBKQELAgEBDQEDAgEBApQAAQcCAQEH
        AQ8CAQETAQ8CAQESAQgCAQEJAQwCAQEOAQ0CAQEQAQcCAQIHAgEBBwEMAgEBDgEKAgEBCwEDAgEBAhgA
        AQIDAQEGAgEBBgELAgEBDQEPAgEBEwEQAgEBFAENAgEBEAEHAgEBCAEDAgEBApAAAUIBTQE+BwABPgMA
        ASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHAAQEB4AEHBAABgAEBAcABAwQAAYABAAGAAQEEAAGA
        AQABgEUAAYABAAGABQABgAEAAYABAQQAAcABAQHAAQMEAAHgAQMB8AEPBAAL
</value>
  </data>
</root>