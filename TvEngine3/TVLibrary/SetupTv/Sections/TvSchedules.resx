<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAE
        DgAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBoAAQMCAQEDARICAQEXASECAQEtASECAQEtARkCAQEhARwCAQElAR0CAQEn
        ARQCAQEZARICAQEXARkCAQEhARUCAQEbAQkCAQEKAQIDARAAAQIDAQEHAgEBBwEQAgEBFAEaAgEBIwEh
        AgEBLQEiAgEBLwEeAgEBKAEUAgEBGgEKAgEBCwEDAgEBA5AAAQIDAQEaAgEBIgFRAQIBBAGeAUIBHwFp
        AfIBPgEWAVwB7wFTAQQBCAG1AVYBCQEYAcsBVQEJASEB0QFRAQIBBAGfAU4BAgEDAZQBVAEEAQkBsAFR
        AQIBBQGdATACAQFKAQkCAQEKDAABAwIBAQMBDQIBARABKgIBAT4BTAECAQMBjgFUAQsBIAHSAUABHgFs
        AfMBLAEgAY8B+wFJAQ0BNwHiAVQBAwEHAa4BNwIBAVgBFwIBAR4BBgIBAQaMAAEKAgEBDAFTAQQBBgGm
        AUYBQwGuAf4BOQE6Aa0B/wIvAaUB/wImAZ0B/wFDARYBTAHtAVABDwEyAd0BQAEZAVwB7wFLAREBNQHi
        AVcBBAENAbcBVgEEAQsBswFUAQMBCQGuASgCAQE7AQMCAQECBAABAwIBAQIBEAIBARMBPQIBAWUBWQEZ
        ATkB3gFEAT8BrwH9AkABswH/ATkBOgGtAf8BMgEzAagB/wItAaMB/wIoAZ8B/wEyAR0BdQH2AVABAgED
        AZsBGgIBASIBBQIBAQWIAAEnAgEBOAFdAUsBpAH5AVYBVwHBAf8CgQHNAf8BmgGbAdUB/wJVAbQB/wEr
        AScBkQH+AXABQAFaAeoBaQFJAYUB9AE8AR4BcQH0AV4BDwEUAcUBXAEKAQ4BswFXAQUBCwGzAU4BAgED
        AZUBCgIBAQwEAAEMAgEBDgE4AgEBWgFeASgBVQHnAVoBWwHGAf8BVAFVAcEB/wJnAcQB/wKCAc4B/wKc
        AdcB/wKVAdMB/wJvAcAB/wI1AaUB/wEzARkBeQH4AVABAgEDAZsBGAIBAR8BAwIBAQOAAAEDAgEBAgFS
        AQQBBQGgAWUBZwHOAf8BXAFdAcQB/wGHAYgB0gH/ArcB4QH/AsAB5AH/Ai4BogH/AWMBTwGDAfgBngF+
        AZ0B9AFJAS4BeQH0AVQBGgE9AeMBXgEMARABtQFdAQsBDgGzAVYBBAEKAbMBGgIBASIBAwIBAQIBHgIB
        ASkBXAERAR4BywFsAW0B1QH/AV4BYAHEAf8BWQFaAcMB/wFsAW0ByQH/AYoBiwHTAf8BqAGpAd0B/wK7
        AeMB/wLBAeUB/wKbAdQB/wI0AaUB/wEyAR0BdQH2ATYCAQFXAQoCAQELgAABBwIBAQgBbAE4AWYB6AFi
        AWQBvAH/AVgBWgG6Af8CgQHSAf8CtwHjAf8CuwHjAf8CVgG1Af8BQQE8AZIB/QGZAXkBmAH0AXoBWgGM
        AfQBQgEhAW4B8wFfAQ4BEQG3AV0BCwEPAbMBVgEEAQsBswE3AgEBWQEHAgEBCAE/AgEBagF3AXEBywH8
        AXABcgHUAf8BWAFZAa0B/wFXAVkBtgH/AWIBYwHHAf8BgwGEAdMB/wKoAd4B/wK7AeQB/wK9AeQB/wK2
        AeAB/wJnAbsB/wInAZ8B/wFUAQMBBwGuARQCAQEagAABDQIBARABfgFpAbUB+AFWAVcBnQH/AVUBVgGo
        Af8BcQFyAc8B/wGqAasB3wH/AqsB3QH/AXYBdwHEAf8BNAEwAZQB/gGKAXEBlAH1AX8BYgGRAfQBQQEg
        AXUB9AFfAQ0BEQG5AVwBCwEPAbMBVwEFAQsBswFIAgIBggENAgEBEAFSAQMBBAGbAYEBgwHoAf8BaAFp
        AbsB/wFPAVEBkwH/AVQBVQGkAf8BWQFbAbsB/wF0AXYB0AH/ApsB3AH/Aq4B4AH/Aa0BrgHfAf8BowGk
        AdoB/wKBAckB/wItAaMB/wFJAQ0BNwHiAR4CAQEogAABEAIBARQBhgGFAeMB/gFIAUoBgQH/AUsBTAGL
        Af8BWwFdAb0B/wGGAYcB1QH/AYgBiQHRAf8CdgHGAf8CLgGiAf8BcgFaAYgB9QFxAVQBigH0AUEBIgF2
        AfQBWwEMARABuwFbAQkBDgGzAVcBBwELAbMBTwECAQMBlgEQAgEBFAFaAQkBDgG0AYgBiwHuAf8BVgFY
        AZUB/wFFAUYBfgH/AUoBSwGIAf8BUgFTAZ8B/wFcAV4BvwH/AnoB0QH/AYoBiwHVAf8BigGLAdMB/wGD
        AYQBzgH/AnoBxwH/ATIBMwGoAf8BLAEgAY8B+wEiAgEBL4AAARACAQETAYgBggHYAfwBQwFEAXMB/wI9
        AXAB/wFNAU4BlQH/AVwBXgG+Af8BXgFfAcIB/wJaAbwB/wEzATQBpAH/AVkBPAF+AfUBWwE/AX8B9AFE
        ASgBdgH0AVgBCAEQAboBWAEHAQ4BswFXAQUBCwGzAU0BAgEDAZABEAIBARMBWAEHAQoBrQGQAZIB8wH/
        AVoBXAGXAf8BOgE7AWUB/wI8AW0B/wFCAUMBfgH/AU0BTgGXAf8BVgFYAbQB/wFeAV8BwQH/AV4BXwHE
        Af8CXwHAAf8BWwFcAb0B/wE5AToBrQH/AT4BHwFxAfQBIQIBAS2AAAELAgEBDQGEAWgBqAH0AUsBTAF/
        Af8BMQEyAVUB/wE8AT0BcQH/AUsBTAGYAf8BTAFNAawB/wFHAUgBtQH/AT0BOgGWAf4BTAE1AXAB9QFO
        ATEBdwH0AUYBLAF2AfQBWAEHAQwBuQFXAQUBCwGzAVcBBQELAbMBQwIBAXYBCwIBAQ0BTAECAQMBjAGV
        AZgB+AH/AXYBeAHCAf8BMwE0AVUB/wEwATEBVAH/ATQBNQFeAf8BPQE+AXMB/wFGAUcBiAH/AUwBTgGe
        Af8BTQFOAakB/wFKAUsBsAH/AUgBSQG1Af8CQAGzAf8BVgELASAB0gEaAgEBI4AAAQYCAQEGAWwBJgE5
        AdcBcwF0AboB/wEpASoBRgH/ATIBMwFZAf8BQQFCAX8B/wFHAUkBlwH/AU0BTgG5Af8BPAExAX0B+wFP
        ATIBZQH0AVIBMwF1AfQBSgEnAWQB8AFXAQUBCgG2AVcBBQEKAbMBVwEFAQsBswEtAgEBQwEGAgEBBgEz
        AgEBTwGGAWsBpwH0AZQBlwH1Af8BRQFGAXEB/wEpASoBRgH/ASwBLQFLAf8BMgEzAVsB/wE7ATwBcAH/
        AUQBRQGCAf8BRwFIAZMB/wFIAUkBngH/AU0BTgG4Af8BRAE/Aa4B/QFMAQIBAwGOARACAQEUgAABAgMB
        AUMCAQF0AZQBlwH0Af8BOwE8AWEB/wEsAS0BTAH/AToBOwFsAf8BTgFPAZsB/wFYAVkBxQH/AUEBJAFI
        AfQBVQE2AWkB9AFXATwBgQH0AVUBDQEaAdcBVgEFAQkBtAFXAQcBCwGzAVUBBgELAa4BEgIBARcBAgMB
        ARYCAQEcAVQBBQEGAaABmQGUAeYB/QGAAYEBzgH/AUEBQwFsAf8BKgErAUYB/wEtAS4BTQH/AjUBXwH/
        AT0BPgFzAf8BSAFJAYwB/wFWAVgBtAH/AVkBWgHFAf8BWQEZATkB3gEqAgEBPgEHAgEBB4QAARcCAQEe
        AX8BTwF9AesBjQGQAewB/wFSAVQBiQH/AVgBWQGbAf8BcAFyAdYB/wFVAUkBnQH6AVcBHgE0AeQBawFQ
        AZQB9AFmAUIBfwHxAVgBBgELAbwBWAEHAQsBswFaAQgBDgGzAUUCAQF6AQYCAQEGBAABBwIBAQcBJQIB
        ATUBYwEUAR4BxwGZAZQB5gH9AZMBlgH1Af8BcwF0AbsB/wFQAVIBhQH/AUkBSwGBAf8BXwFgAasB/wFu
        AXABzwH/AWwBbQHVAf8BXwEoAVUB5wE9AgEBZgEOAgEBEQECAwGEAAEGAgEBBgE8AgEBYgGLAXkBwQH4
        AZABkgHzAf8BhAGGAeoB/wFxAWsBxQH9AWsBMQFRAeUBbAEpAUgB3AFtATcBYgHnAWMBGAEmAdABXAEK
        ARABtQFbAQkBDwGzAVABAwEFAZcBGAIBAR8BAgMBBAABAgMBAQoCAQELASUCAQE1AVIBBAEFAZ8BhgFo
        AaQB8wGVAZgB+AH/AZABkgHzAf8BiAGLAe4B/wGBAYMB6AH/AXcBcQHLAfwBXQERAR4BywE4AgEBWgEQ
        AgEBFAEDAgEBAowAAQ0CAQEPATkCAQFdAVgBBgEKAasBVgEGAQkBqQFDAgEBdAFLAQIBAwGNAU8BAwEE
        AZQBPAIBAWMBOgIBAV4BRwEBAQIBfQE/AgEBawEcAgEBJgEEAgEBBAwAAQIDAQEHAgEBBwEWAgEBHAEz
        AgEBUAFMAQIBAwGMAVgBBwEKAawBWgEJAQ4BtAFSAQMBBAGbAT8CAQFqAR4CAQEpAQsCAQENAQMCAQEC
        lAABBwIBAQcBEAIBARMBDwIBARIBCAIBAQkBDAIBAQ4BDQIBARABBwIBAgcCAQEHAQwCAQEOAQoCAQEL
        AQMCAQECGAABAgMBAQYCAQEGAQsCAQENARACAQETARACAQEUAQ0CAQEQAQcCAQEIAQMCAQECkAABQgFN
        AT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAcABAQHgAQcEAAGAAQEBwAEDBAABgAEA
        AYABAQQAAYABAAGARQABgAEAAYAFAAGAAQABgAEBBAABwAEBAcABAwQAAeABAwHwAQ8EAAs=
</value>
  </data>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>302, 17</value>
  </metadata>
</root>