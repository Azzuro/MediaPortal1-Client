using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Diagnostics;
using System.Runtime.Serialization;

using IdeaBlade.Persistence;
using IdeaBlade.Rdb;
using IdeaBlade.Persistence.Rdb;
using IdeaBlade.Util;

namespace TvDatabase {

  #region FavoriteDataTable
  /// <summary>
  ///    ****************************************************
  ///    ** DO NOT MODIFY THIS CLASS - AutoGenerated Code
  ///    ** Any changes made to this code will be lost the
  ///    ** next time this code is regenerated.
  ///    **
  ///    ** Generated from: EntityBaseclass.template
  ///    ** Last modified : 2006-06-26T06:48:32.796875+02:00
  ///    ****************************************************
  ///</summary>
  [BindingBrowsable(false)]
  [Serializable]
  public partial class FavoriteDataTable : IdeaBlade.Persistence.EntityTable , 
     IdeaBlade.Persistence.Rdb.IRdbTable {
  
    public FavoriteDataTable() {}

    protected FavoriteDataTable(SerializationInfo pInfo, StreamingContext pContext) :
      base(pInfo, pContext) {}

    protected override DataRow NewRowFromBuilder(DataRowBuilder pRowBuilder) {
      return new Favorite(pRowBuilder);
    }

    protected override Type GetRowType() {
      return typeof(Favorite);
    }
    
    public override String DataSourceKeyName {
      get { return @"default"; }
    }


    #region Column properties
    private DataColumn mIdFavoriteColumn;
    public DataColumn IdFavoriteColumn {
      get {
        if (mIdFavoriteColumn!=null) return mIdFavoriteColumn;
        mIdFavoriteColumn = GetColumn("IdFavorite", true);
        return mIdFavoriteColumn;
      }
    }
    private DataColumn mIdProgramColumn;
    public DataColumn IdProgramColumn {
      get {
        if (mIdProgramColumn!=null) return mIdProgramColumn;
        mIdProgramColumn = GetColumn("IdProgram", true);
        return mIdProgramColumn;
      }
    }
    private DataColumn mPriorityColumn;
    public DataColumn PriorityColumn {
      get {
        if (mPriorityColumn!=null) return mPriorityColumn;
        mPriorityColumn = GetColumn("Priority", true);
        return mPriorityColumn;
      }
    }
    private DataColumn mTimesWatchedColumn;
    public DataColumn TimesWatchedColumn {
      get {
        if (mTimesWatchedColumn!=null) return mTimesWatchedColumn;
        mTimesWatchedColumn = GetColumn("TimesWatched", true);
        return mTimesWatchedColumn;
      }
    }
    #endregion    

    protected override TableMappingInfo CreateTableMappingInfo() {
      RdbTableMappingInfo mappingInfo = new RdbTableMappingInfo(this);
      mappingInfo.SourceOwnerName = "dbo"; 
      mappingInfo.SourceTableName = "Favorite"; 
      mappingInfo.ConcurrencyColumnName = ""; 
      // ColumnSelectionOption: selectAllColumns
      mappingInfo.SourceColumnNames = "*"; 
   
      DataColumnMappingCollection columnMappings = mappingInfo.TableMapping.ColumnMappings;
      columnMappings.Clear();
      columnMappings.Add("idFavorite", "IdFavorite");
      columnMappings.Add("idProgram", "IdProgram");
      columnMappings.Add("priority", "Priority");
      columnMappings.Add("timesWatched", "TimesWatched");
      return mappingInfo;
    }
  
    protected override void UpdateTableMappingInfo() {
      base.UpdateTableMappingInfo();
    }

    public override void InitColumnProperties() {
      base.InitColumnProperties();

      IdFavoriteColumn.Caption = "idFavorite";
      IdProgramColumn.Caption = "idProgram";
      PriorityColumn.Caption = "priority";
      TimesWatchedColumn.Caption = "timesWatched";
    }
  }
  #endregion
  
  #region FavoriteDataRow
  /// <summary>
  ///    ****************************************************
  ///    ** DO NOT MODIFY THIS CLASS - AutoGenerated Code
  ///    ** Any changes made to this code will be lost the
  ///    ** next time this code is regenerated
  ///    **
  ///    ** Generated from: EntityBaseclass.template
  ///    ** Generated on:   2006-06-26T06:48:32.796875+02:00
  ///    ****************************************************
  ///</summary>
  [Serializable]
  public abstract partial class FavoriteDataRow : IdeaBlade.Persistence.Entity, 
     IdeaBlade.Persistence.Rdb.IRdbEntity {
  
    protected FavoriteDataRow(DataRowBuilder pRowBuilder)
      : base(pRowBuilder) {
    }

    [BindingBrowsable(false)]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public new FavoriteDataTable TypedTable {
      get { return (FavoriteDataTable) base.Table; }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public static Type GetTableType() {
      return typeof(FavoriteDataTable);
    }

    [BindingBrowsable(false)]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public virtual string SqlWhereClause {
      get { return ""; }
    }
    
    [BindingBrowsable(false)]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public virtual bool ForceSqlDistinct {
      get { return false; }
    }

    #region Enums
    //**************************************
    //* Enums
    //**************************************
    #endregion
	
    #region Relation properties
    //**************************************
    //* Relation properties
    //**************************************

    public virtual Program Program {
      get {
        return this.PersistenceManager.GetParent<Program>(this, EntityRelations.Program_Favorite);
      }
      set {
        if (value == null) {
          this.SetNull(this.IdProgramColumn);
        } else {
          SetColumnValue(this.IdProgramColumn, value, value.IdProgramColumn);
        }
      }
    }

    #endregion
    
    #region EntityColumn definitions
    //**************************************
    //* Static EntityColumn definitions
    //**************************************

    public static readonly EntityColumn IdFavoriteEntityColumn =
      new EntityColumn(typeof(Favorite), "IdFavorite", typeof(System.Int32), false, true, true, DataSourceAccessType.ReadWrite);      
    public static readonly EntityColumn IdProgramEntityColumn =
      new EntityColumn(typeof(Favorite), "IdProgram", typeof(System.Int32), false, false, false, DataSourceAccessType.ReadWrite);      
    public static readonly EntityColumn PriorityEntityColumn =
      new EntityColumn(typeof(Favorite), "Priority", typeof(System.Int32), false, false, false, DataSourceAccessType.ReadWrite);      
    public static readonly EntityColumn TimesWatchedEntityColumn =
      new EntityColumn(typeof(Favorite), "TimesWatched", typeof(System.Int32), false, false, false, DataSourceAccessType.ReadWrite);      
    #endregion
    
    #region Properties
    //**************************************
    //* IdFavorite methods
    //**************************************
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [BindingBrowsable(false)]
    public virtual DataColumn IdFavoriteColumn {
      get { return TypedTable.IdFavoriteColumn; }
    }

    [DBDataType(typeof(System.Int32))]
    public virtual System.Int32 IdFavorite {
      get { return (System.Int32) GetColumnValue(IdFavoriteColumn, typeof(System.Int32), false); }
    }
    //**************************************
    //* IdProgram methods
    //**************************************
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [BindingBrowsable(false)]
    public virtual DataColumn IdProgramColumn {
      get { return TypedTable.IdProgramColumn; }
    }

    [DBDataType(typeof(System.Int32))]
    public virtual System.Int32 IdProgram {
      get { return (System.Int32) GetColumnValue(IdProgramColumn, typeof(System.Int32), false); }
      set { this.SetColumnValue(IdProgramColumn, value); }
    }
    //**************************************
    //* Priority methods
    //**************************************
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [BindingBrowsable(false)]
    public virtual DataColumn PriorityColumn {
      get { return TypedTable.PriorityColumn; }
    }

    [DBDataType(typeof(System.Int32))]
    public virtual System.Int32 Priority {
      get { return (System.Int32) GetColumnValue(PriorityColumn, typeof(System.Int32), false); }
      set { this.SetColumnValue(PriorityColumn, value); }
    }
    //**************************************
    //* TimesWatched methods
    //**************************************
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [BindingBrowsable(false)]
    public virtual DataColumn TimesWatchedColumn {
      get { return TypedTable.TimesWatchedColumn; }
    }

    [DBDataType(typeof(System.Int32))]
    public virtual System.Int32 TimesWatched {
      get { return (System.Int32) GetColumnValue(TimesWatchedColumn, typeof(System.Int32), false); }
      set { this.SetColumnValue(TimesWatchedColumn, value); }
    }
    #endregion
    
    
  }
  #endregion
}
