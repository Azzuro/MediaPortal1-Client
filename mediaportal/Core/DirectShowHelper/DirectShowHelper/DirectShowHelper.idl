// DirectShowHelper.idl : IDL source for DirectShowHelper
//

// This file will be processed by the MIDL tool to
// produce the type library (DirectShowHelper.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
import "amstream.idl";

cpp_quote("#if 0")
typedef DWORD           IDirect3DTexture9;
cpp_quote ("#endif")

[
	object,
	uuid(6BD43BC8-22A3-478C-A571-EA723BD9F019),
	helpstring("IVMR9Callback Interface"),
	pointer_default(unique)
]
interface IVMR9Callback : IUnknown{
	[helpstring("method PresentImage")]   HRESULT PresentImage([in] int width, [in] int height, [in] int ARWidth, [in] int ARHeight, [in] DWORD texture);
	[helpstring("method PresentSurface")] HRESULT PresentSurface([in] int width, [in] int height, [in] int ARWidth, [in] int ARHeight, [in] DWORD surface);
};
[
	object,
	uuid(1463CD20-B360-49B8-A81C-47981347FDB5),
	helpstring("IVMR9Helper Interface"),
	pointer_default(unique)
]
interface IVMR9Helper : IUnknown{
	[helpstring("method Init")] HRESULT Init([in] IVMR9Callback* callback, [in] DWORD dwD3DDevice, [in] IBaseFilter* vmr9Filter, [in] DWORD monitor);
	[helpstring("method SetDeinterlacePrefs")] HRESULT SetDeinterlacePrefs([in] DWORD dwInterlace);
	[helpstring("method SetDeinterlaceMode")] HRESULT SetDeinterlaceMode([in] int mode);
};
[
	object,
	uuid(C5B0E1CE-6BFE-48FC-8EC0-8ABC19C1EBD4),
	dual,
	nonextensible,
	helpstring("IDVD Interface"),
	pointer_default(unique)
]
interface IDVD : IDispatch{
	[id(1), helpstring("method Reset")] HRESULT Reset([in] BSTR strPath);
};
[
	object,
	uuid(752D4561-E632-4328-8206-9FB5277D8096),
	dual,
	nonextensible,
	helpstring("IStreamBufferRecorder Interface"),
	pointer_default(unique)
]
interface IStreamBufferRecorder : IDispatch{
	[id(1), helpstring("method Record")] HRESULT Create(IBaseFilter* streamBufferSink, [in] BSTR strPath,DWORD dwRecordingType);
	[id(2), helpstring("method Record")] HRESULT Start(LONG startTime);
	[id(3), helpstring("method Stop")] HRESULT Stop(void);
	[id(4), helpstring("method SetAttributeString")] HRESULT SetAttributeString([in] BSTR strName, [in] BSTR strValue);
	[id(5), helpstring("method SetAttributeDWORD")] HRESULT SetAttributeDWORD([in] BSTR strName, ULONG dwValue);
};
[
	object,
	uuid(FE5A869F-F0BB-401C-93E8-DD2222353C14),
	helpstring("IWmvHelper Interface"),
	pointer_default(unique)
]
interface IWmvHelper : IUnknown{
	[id(1), helpstring("method SetProfile")] HRESULT SetProfile([in] IBaseFilter* asfWriter, ULONG bitrate, ULONG fps, ULONG screenX, ULONG screenY);
};
[
	uuid(935FCAC9-6668-49FB-9706-43B51861F491),
	version(1.0),
	helpstring("DirectShowHelper 1.0 Type Library")
]
library DirectShowHelperLib
{
	importlib("stdole2.tlb");
	[
		uuid(A7D8DDD4-2104-42C0-966C-08B400F5498F),
		helpstring("VMR9Callback Class")
	]
	coclass VMR9Callback
	{
		[default] interface IVMR9Callback;
	};
	[
		uuid(D23CF2BC-5AD3-407F-B562-A7CB0FD342DB),
		helpstring("VMR9Helper Class")
	]
	coclass VMR9Helper
	{
		[default] interface IVMR9Helper;
	};
	[
		uuid(EA2F675F-E8A2-4C75-9B04-8A170B2AAC47),
		helpstring("DVD Class")
	]
	coclass DVD
	{
		[default] interface IDVD;
	};
	[
		uuid(BBB2551F-E239-41CE-805A-651964BE143E),
		helpstring("StreamBufferRecorder Class")
	]
	coclass StreamBufferRecorder
	{
		[default] interface IStreamBufferRecorder;
	};
	[
		uuid(CE282FB8-8E9F-4086-BFB1-A67E01166D92),
		helpstring("WmvHelper Class")
	]
	coclass WmvHelper
	{
		[default] interface IWmvHelper;
	};
};
