Architectual issues need to be looked at in the future

Folder Settings Manager
    We need a global manager which can store & retrieve settings for a specific folder
    Settings could be things like 'sort by', 'view as icons,list' etc
    there could be 'global' settings for each folder, but also settings specific for a 
    plugin, window, class,...

PlaylistPlayer
    The playlist player now stores playlist items. These need to be extended with a 
    media type like cd, audio, internet stream, dvd, tv, ....

Global metadata manager
    The global metadata manager should be able to store & retrieve meta data for media
    metadata are things like id3,ogg,wma tags, but also IMDB info for a movie or TVGUIDE information
    for a program. So any information/data belonging to a media item.
    With the metadata manager the plugins like the music overlay, video overlay can simply query
    the metadata for the current playing media and draw it onscreen
    The different plugins like my music, my videos, my tv could implement specific ContentProviders 
    for the metadata manager

Global Plugin manager
    At the moment plugins are loaded at several places in mediaportal
    All plugins need to be loaded & maintained by 1 global plugin manager 

Plugin Types:
    There should probably be different types of plugins.
    IContentPlugin
        The content plugin would only deliver content to MediaPortal. What is content? 
        It could be things like weather information, system information (cpu temp etc) or just about anything 
        that could deliver information to MediaPortal to be shown. The plugin itself doesn't have any visual, 
        it only delivers information to MediaPortal. This could be achieved by exposing the GUIPropertyManager 
        to the plugin for example, allowing any skin to display the content information. 

    IInputPlugin
        The main feature of the input plugin is to translate something/anything into MediaPortal actions. 
        This to control the behaviour of MediaPortal with remotes etc.

    IOutputPlugin
        The main feature of the output plugin is to translate actions/events into information for 
        output devices, such as lcd-displays.

    IRemotePlugin (implements IInputPlugin)
        The standard remote plugin has the ability to translate discrete codes/other information into 
        MediaPortal actions. It receives discrete codes/information from any valid IInputDevice. This makes 
        it possible to use the same IRemotePlugin for all different types of remotes. The main feature 
        of the remote plugin is to learn and map codes to actions.

    IInputDevice
        A "device" is a more hardware oriented plugin, which handles the communication with various hardware 
        such as ir-receivers (remotes), X10 stuff (for home automation) etc. The input device defines 
        a standard way to deliver information to any IInputPlugin. 

    IOutputDevice
        The ouput device is the equivalent to the IInputDevice, but, for output. This plugin performs the communication 
        with displays, ir-transmitters etc.

    IProgramPlugin/IVisualPlugin
        The program plugin acts like the plugins available today, they add functionality to MediaPortal that the 
        normal user sees as a part of MediaPortal. (Like My News, My Programs, My Recepies etc.)


