A detailed documentation follows later.
Here is a short overview:

The following commands working yet:

text         	is a individual text.
mp_text      	when mp_text is a number it will convert to localize text.
0x        	defines a hex value
true | false  	is a boolean value

#description: text  
#button: mp_text        Returns a Button text to caller
#breaktime: (seconds)  Breaks the script after (X) seconds. It will prevent
      endless Loops. The default Time is 5 seconds. It is
      necessary when #breaktime is not specified! 0 Seconds
      switch the breaktime off!

MPScript is not case sensitive !

Commands:

 if(cond)
 else
 endif

 while(cond)
 endwhile
 
 switch(var)
  case indx:
  default      (optional)
 endswitch

 call(script)
 
 end   Programm end
 
 
Variable Types
 variant     MPScript works with one var type. it contains following formts: int long double string boolean
 global  the scope of a global var is in all loaded scripts
 var   the scope of a var is in actual script
 static  between MPScript calls the value of this var will not change 


Arithmetic operators
 * multiplication operator
 / division operator
 % modulus operator
 + addition
 - subtract
 
 
Conditional operators
 < less than
 <= less than or equal
 > greater than
 >= greater than or equal
 == equal
 != not equal
 && and
 || or
 
 
Bit operator
 ^ exclusive-OR
 & and
 | or
 
 
Functions
 sin(op)    Returns the sine of the specified angle
 cos(op)    Returns the cosine  of the specified angle
 tan(op)    Returns the tangent  of the specified angle
 asin(op)   Returns the angle whose sine is the specified number.
 acos(op)   Returns the angle whose cosine is the specified number
 atan(op)   Returns the angle whose tangent is the specified number
 sinh(op)   Returns the hyperbolic sine of the specified angle
 cosh(op)   Returns the hyperbolic cosine  of the specified angle
 tanh(op)   Returns the hyperbolic tangent  of the specified angle
 abs(op)    Returns the absolute value of a specified number
 sqrt(op)   Returns the square root of a specified number
 ciel(op)   Returns the smallest whole number greater than or equal to the specified number
 floor(op)   Returns the largest whole number less than or equal to the specified number
 exp(op)    Returns e raised to the specified power
 log10(op)   Returns the base 10 logarithm of a specified number
 log(op)    Returns the logarithm of a specified number
 max(op,op)   Returns the larger of two specified numbers
 min(op,op)   Returns the smaller of two numbers
 pow(op)    Returns a specified number raised to the specified power
 round(op)   Returns the number nearest the specified value
 rnd()    Returns a random number
 random(min,max)  Returns a random number in range of (min,max)
 
 e()     Represents the natural logarithmic base
 pi()    Represents the ratio of the circumference of a circle to its diameter
 
 now()    Gets a Date and Time that is the current local date and time on this computer
 today()    Gets the current date
 
 calc(op)   Returns the Evaluate from a given string  
 YesNoBox(mp_text) Returns a boolean value given from YesNo Dialog Box
 
 
Procedures
 MessageBox(mp_text)
 MP_Action(action)  Starts a MediaPortal action. Known actions are:
        SHUTDOWN  Shutdown the PC
        REBOOT   Reboots the PC
        EJECTCD   Eject the CD
        PREVIOUS_MENU Go back in Menu
 
--------------------------------------------------------------------------------------
Sample:

#Button: 631                // returns the translation for "Delete"
global test = 103*3938  // inits a global var with 405614. test is automatic a long var
var check=true    // inits a boolean var
static stest=100   // inits a static int var
var date=""     // inits a string var   
var test2=0     // inits a int var
var i=0      // inits a int var

date=now()     // sets date to actual date/time
date="test"     // sets date to "test"
test=test/283+200+test2  // sets test to 1633,265017667844
stest=max(stest,45)   // sets stest to 100
stest=rnd()     // sets stest to a random number
stest=random(10,35)   // sets stest to a random number between 10 and 35

check=YesNoBox("Test text") // the return value from YesNoBox is set to check. The Box Display "Testtext"
check=YesNoBox(631)   // the return value from YesNoBox is set to check. The Box Display "Do you want to shutdown?"

IF (check==true)   // if check == true the next line will be execute. Otherwise the programm jump to the correspondent endif
   IF (check==false)  // if check == true the next line will be execute. Otherwise the programm jump to the else statement
      MP_Action(SHUTDOWN)
   ELSE
      MP_Action(REBOOT)
   ENDIF
EndIf

While (i<10)    // a while loop
   i=i+1
EndWhile


Switch (i)     // a switch command
  Case 5:
   stest=5
  Case 8:
         stest=8
  Case 10:
         stest=10
  Default
         stest=20
EndSwitch
 
Call(TEST)     // Calls the MPScript TEST.MPS

End       // Programm end


-------------------------------------------------------------------------------------

Scripts can easy build in every MP Plugin. Here is the example:

 ScriptHandler gScript=new ScriptHandler();
 
 gScript.SetGlobalVar("insubmenu",inSubMenu);  // Sets a global bool Scriptvar
 gScript.SetGlobalVar("test",100);     // Sets a global int Scriptvar
 gScript.SetGlobalVar("text","Testtext");  // Sets a global string Scriptvar
 
 bool=gScript.LoadScript(scriptname);   // Loads a Script in Memory (scriptname without Extensions)
 gScript.StartScript(button);     // Start script (buttonname)
 gScript.StartScriptName(progLine);    // Start script (scriptname)

-------------------------------------------------------------------------------------

The next steps:

for
endfor

#define

more mpactions
mpvars

run scripts in Background

seriell & paralel IO (to control LCD´s)

and many more.....

 