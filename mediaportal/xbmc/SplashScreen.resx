<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <metadata name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>